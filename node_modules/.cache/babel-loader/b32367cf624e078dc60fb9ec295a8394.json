{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/Usuario/alterRealm.js\";\nimport { connect } from 'react-redux';\nimport { change, submit, isSubmitting } from 'redux-form';\nimport React, { Component, Fragment } from 'react';\nimport { required, Button, SelectInput, SaveButton, CREATE, SimpleForm, withDataProvider } from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/AccountBox';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nclass Role extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false,\n      showDialog: false,\n      roles: null\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        showDialog: true\n      });\n    };\n\n    this.handleCloseClick = () => {\n      this.setState({\n        showDialog: false\n      });\n    };\n\n    this.handleSaveClick = () => {\n      const submit = this.props.submit; // Trigger a submit of our custom quick create form\n      // This is needed because our modal action buttons are oustide the form\n\n      submit('post-quick-create');\n    };\n\n    this.handleSubmit = values => {\n      const _this$props = this.props,\n            dataProvider = _this$props.dataProvider,\n            record = _this$props.record;\n      dataProvider(CREATE, \"Usuarios/alterRealm\", {\n        pagination: {\n          page: 1,\n          perPage: 0\n        },\n        sort: {\n          field: 'id',\n          order: 'DESC'\n        },\n        data: {\n          id: record.id,\n          realmName: values.type\n        }\n      }, {\n        onSuccess: {\n          unselectAll: true,\n          refresh: true\n        },\n        onError: {\n          notification: {\n            body: 'Error: algo deu errado!',\n            level: 'warning'\n          }\n        }\n      });\n      this.setState({\n        showDialog: false\n      });\n    };\n\n    this.componentWillMount = async () => {// const { dataProvider, dispatch, record } = this.props;\n      // await dataProvider(\n      //   GET_MANY_REFERENCE,\n      //   \"Dias\",\n      //   {\n      //     pagination: { page: 1, perPage: 0 },\n      //     sort: { field: \"id\", order: \"DESC\" },\n      //     target: \"turmaId\",\n      //     id: this.props.turmId\n      //   },\n      //   {\n      //     onError: {\n      //       notification: {\n      //         body: \"Error: algo deu errado!\",\n      //         level: \"warning\"\n      //       }\n      //     }\n      //   }\n      // ).then(dias => {\n      //   dias.data.forEach(element => {\n      //     element.dia = new Date(element.dia).toLocaleDateString(\"pt-BR\", {\n      //       weekday: \"long\",\n      //       year: \"numeric\",\n      //       month: \"long\",\n      //       day: \"numeric\",\n      //       hour: \"numeric\",\n      //       minute: \"numeric\"\n      //     });\n      //   });\n      //   this.setState({ days: dias.data });\n      // });\n    };\n  }\n\n  render() {\n    const showDialog = this.state.showDialog;\n    const isSubmitting = this.props.isSubmitting;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClick,\n      label: \"Modificar privil\\xE9gio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(IconContentAdd, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      fullWidth: true,\n      open: showDialog,\n      onClose: this.handleCloseClick,\n      \"aria-label\": \"Modificar privil\\xE9gio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Privil\\xE9gios\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(SimpleForm // We override the redux-form name to avoid collision with the react-admin main form\n    , {\n      form: \"post-quick-create\",\n      resource: \"Inscricoes\" // We override the redux-form onSubmit prop to handle the submission ourselves\n      ,\n      onSubmit: this.handleSubmit // We want no toolbar at all as we have our modal actions\n      ,\n      toolbar: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(SelectInput, {\n      label: \"Selecione um privil\\xE9gio \",\n      validate: required(),\n      source: \"type\",\n      optionText: \"nome\",\n      optionValue: \"id\",\n      choices: [{\n        id: 'Petiano',\n        nome: 'Petiano'\n      }, {\n        id: 'Normal',\n        nome: 'Normal'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(SaveButton, {\n      label: \"Modificar privil\\xE9gio\",\n      saving: isSubmitting,\n      onClick: this.handleSaveClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"ra.action.cancel\",\n      onClick: this.handleCloseClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(IconCancel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nRole.propTypes = {\n  dataProvider: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  record: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting('post-quick-create')(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n  submit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withDataProvider(Role));","map":{"version":3,"sources":["/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/Usuario/alterRealm.js"],"names":["connect","change","submit","isSubmitting","React","Component","Fragment","required","Button","SelectInput","SaveButton","CREATE","SimpleForm","withDataProvider","IconContentAdd","IconCancel","Dialog","DialogTitle","PropTypes","DialogContent","DialogActions","Role","state","error","showDialog","roles","handleClick","setState","handleCloseClick","handleSaveClick","props","handleSubmit","values","dataProvider","record","pagination","page","perPage","sort","field","order","data","id","realmName","type","onSuccess","unselectAll","refresh","onError","notification","body","level","componentWillMount","render","nome","propTypes","func","isRequired","dispatch","object","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { change, submit, isSubmitting } from 'redux-form';\nimport React, { Component, Fragment } from 'react';\nimport {\n  required,\n  Button,\n  SelectInput,\n  SaveButton,\n  CREATE,\n  SimpleForm,\n  withDataProvider\n} from 'react-admin';\n\nimport IconContentAdd from '@material-ui/icons/AccountBox';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nclass Role extends Component {\n  state = {\n    error: false,\n    showDialog: false,\n    roles: null\n  };\n\n  handleClick = () => {\n    this.setState({ showDialog: true });\n  };\n\n  handleCloseClick = () => {\n    this.setState({ showDialog: false });\n  };\n\n  handleSaveClick = () => {\n    const { submit } = this.props;\n\n    // Trigger a submit of our custom quick create form\n    // This is needed because our modal action buttons are oustide the form\n    submit('post-quick-create');\n  };\n\n  handleSubmit = values => {\n    const { dataProvider, record } = this.props;\n\n    dataProvider(\n      CREATE,\n      `Usuarios/alterRealm`,\n      {\n        pagination: { page: 1, perPage: 0 },\n        sort: { field: 'id', order: 'DESC' },\n        data: {\n          id: record.id,\n          realmName: values.type\n        }\n      },\n      {\n        onSuccess: {\n          unselectAll: true,\n          refresh: true\n        },\n        onError: {\n          notification: {\n            body: 'Error: algo deu errado!',\n            level: 'warning'\n          }\n        }\n      }\n    );\n\n    this.setState({ showDialog: false });\n  };\n\n  componentWillMount = async () => {\n    // const { dataProvider, dispatch, record } = this.props;\n    // await dataProvider(\n    //   GET_MANY_REFERENCE,\n    //   \"Dias\",\n    //   {\n    //     pagination: { page: 1, perPage: 0 },\n    //     sort: { field: \"id\", order: \"DESC\" },\n    //     target: \"turmaId\",\n    //     id: this.props.turmId\n    //   },\n    //   {\n    //     onError: {\n    //       notification: {\n    //         body: \"Error: algo deu errado!\",\n    //         level: \"warning\"\n    //       }\n    //     }\n    //   }\n    // ).then(dias => {\n    //   dias.data.forEach(element => {\n    //     element.dia = new Date(element.dia).toLocaleDateString(\"pt-BR\", {\n    //       weekday: \"long\",\n    //       year: \"numeric\",\n    //       month: \"long\",\n    //       day: \"numeric\",\n    //       hour: \"numeric\",\n    //       minute: \"numeric\"\n    //     });\n    //   });\n    //   this.setState({ days: dias.data });\n    // });\n  };\n\n  render() {\n    const { showDialog } = this.state;\n    const { isSubmitting } = this.props;\n\n    return (\n      <Fragment>\n        <Button onClick={this.handleClick} label=\"Modificar privilégio\">\n          <IconContentAdd />\n        </Button>\n        <Dialog\n          fullWidth\n          open={showDialog}\n          onClose={this.handleCloseClick}\n          aria-label=\"Modificar privilégio\"\n        >\n          <DialogTitle>Privilégios</DialogTitle>\n          <DialogContent>\n            <SimpleForm\n              // We override the redux-form name to avoid collision with the react-admin main form\n              form=\"post-quick-create\"\n              resource=\"Inscricoes\"\n              // We override the redux-form onSubmit prop to handle the submission ourselves\n              onSubmit={this.handleSubmit}\n              // We want no toolbar at all as we have our modal actions\n              toolbar={null}\n            >\n              <SelectInput\n                label=\"Selecione um privilégio \"\n                validate={required()}\n                source=\"type\"\n                optionText=\"nome\"\n                optionValue=\"id\"\n                choices={[\n                  { id: 'Petiano', nome: 'Petiano' },\n                  { id: 'Normal', nome: 'Normal' }\n                ]}\n              />\n            </SimpleForm>\n          </DialogContent>\n          <DialogActions>\n            <SaveButton\n              label=\"Modificar privilégio\"\n              saving={isSubmitting}\n              onClick={this.handleSaveClick}\n            />\n            <Button label=\"ra.action.cancel\" onClick={this.handleCloseClick}>\n              <IconCancel />\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nRole.propTypes = {\n  dataProvider: PropTypes.func.isRequired,\n\n  dispatch: PropTypes.func.isRequired,\n  record: PropTypes.object\n};\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting('post-quick-create')(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n\n  submit\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withDataProvider(Role));\n"]},"metadata":{},"sourceType":"module"}