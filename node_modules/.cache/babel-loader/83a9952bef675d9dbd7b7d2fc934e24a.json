{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = exports.TimePickerView = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Clock = _interopRequireDefault(require(\"./Clock\"));\n\nvar clockType = _interopRequireWildcard(require(\"../../constants/clock-types\"));\n\nvar _WithUtils = _interopRequireDefault(require(\"../../_shared/WithUtils\"));\n\nvar _ClockNumbers = require(\"./ClockNumbers\");\n\nvar TimePickerView =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  (0, _inheritsLoose2.default)(TimePickerView, _PureComponent);\n\n  function TimePickerView() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;\n\n    _this.getViewProps = function () {\n      var _this$props = _this.props,\n          type = _this$props.type,\n          ampm = _this$props.ampm,\n          date = _this$props.date,\n          utils = _this$props.utils;\n\n      switch (type) {\n        case clockType.HOURS:\n          return {\n            value: utils.getHours(date),\n            children: (0, _ClockNumbers.getHourNumbers)({\n              date: date,\n              ampm: ampm,\n              utils: utils\n            }),\n            onChange: _this.handleHourChange\n          };\n\n        case clockType.MINUTES:\n          var minutesValue = utils.getMinutes(date);\n          return {\n            value: minutesValue,\n            children: (0, _ClockNumbers.getMinutesNumbers)({\n              value: minutesValue,\n              utils: utils\n            }),\n            onChange: _this.handleMinutesChange\n          };\n\n        case clockType.SECONDS:\n          var secondsValue = utils.getSeconds(date);\n          return {\n            value: secondsValue,\n            children: (0, _ClockNumbers.getMinutesNumbers)({\n              value: secondsValue,\n              utils: utils\n            }),\n            onChange: _this.handleSecondsChange\n          };\n\n        default:\n          throw new Error('You must provide the type for TimePickerView');\n      }\n    };\n\n    _this.handleHourChange = function (hours, isFinish) {\n      var _this$props2 = _this.props,\n          date = _this$props2.date,\n          utils = _this$props2.utils;\n      var updatedTime = utils.setHours(date, hours);\n\n      _this.props.onHourChange(updatedTime, isFinish);\n    };\n\n    _this.handleMinutesChange = function (minutes, isFinish) {\n      var _this$props3 = _this.props,\n          date = _this$props3.date,\n          utils = _this$props3.utils;\n      var updatedTime = utils.setMinutes(date, minutes);\n\n      _this.props.onMinutesChange(updatedTime, isFinish);\n    };\n\n    _this.handleSecondsChange = function (seconds, isFinish) {\n      var _this$props4 = _this.props,\n          date = _this$props4.date,\n          utils = _this$props4.utils;\n      var updatedTime = utils.setSeconds(date, seconds);\n\n      _this.props.onSecondsChange(updatedTime, isFinish);\n    };\n\n    return _this;\n  }\n\n  var _proto = TimePickerView.prototype;\n\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n        ampm = _this$props5.ampm,\n        type = _this$props5.type;\n    var viewProps = this.getViewProps();\n    return _react.default.createElement(_Clock.default, (0, _extends2.default)({\n      type: type,\n      ampm: ampm\n    }, viewProps));\n  };\n\n  return TimePickerView;\n}(_react.PureComponent);\n\nexports.TimePickerView = TimePickerView;\nTimePickerView.defaultProps = {\n  ampm: true\n};\nprocess.env.NODE_ENV !== \"production\" ? TimePickerView.propTypes = {\n  date: _propTypes.default.object.isRequired,\n  onHourChange: _propTypes.default.func.isRequired,\n  onMinutesChange: _propTypes.default.func.isRequired,\n  onSecondsChange: _propTypes.default.func.isRequired,\n  utils: _propTypes.default.object.isRequired,\n  ampm: _propTypes.default.bool,\n  type: _propTypes.default.oneOf(Object.keys(clockType).map(function (key) {\n    return clockType[key];\n  })).isRequired\n} : void 0;\n\nvar _default = (0, _WithUtils.default)()(TimePickerView);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}