{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Atividade/addActivity.js\";\nimport React from 'react';\nimport { Create, ReferenceInput, SimpleForm, TextInput, NumberInput, LongTextInput, SelectInput, SaveButton, Toolbar } from 'react-admin';\nimport BackButton from '../backButton';\n\nconst PostCreateToolbar = props => React.createElement(Toolbar, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}), React.createElement(SaveButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), React.createElement(BackButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}));\n\nconst validateUserCreation = values => {\n  const errors = {};\n\n  if (!values.nome) {\n    errors.nome = ['É necessário preencher um nome!'];\n  }\n\n  if (values.valor === null) {\n    errors.valor = ['São aceitos apenas números!'];\n  } else if (values.valor < 0) {\n    errors.valor = ['O valor precisa ser maior que ou igual a 0'];\n  }\n\n  if (!values.cargaHoraria) {\n    errors.cargaHoraria = ['É preciso ter uma carga horária'];\n  } else if (!Number.isInteger(values.cargaHoraria)) {\n    errors.cargaHoraria = ['São aceitos apenas números inteiros!'];\n  } else if (values.cargaHoraria < 1) {\n    errors.cargaHoraria = ['A carga horária precisa ser maior que 0'];\n  }\n\n  if (!values.categoriaId) {\n    errors.categoriaId = ['Selecione uma categoria'];\n  }\n\n  if (!values.descricao) {\n    errors.descricao = ['É necessário dar uma descrição à atividade'];\n  }\n\n  return errors;\n};\n\nexport const PostCreate = props => React.createElement(Create, Object.assign({\n  title: \"Atividade/add\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), React.createElement(SimpleForm, {\n  toolbar: React.createElement(PostCreateToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }),\n  validate: validateUserCreation,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(TextInput, {\n  label: \"Nome da atividade\",\n  source: \"nome\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), React.createElement(NumberInput, {\n  label: \"Valor\",\n  source: \"valor\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}), React.createElement(NumberInput, {\n  label: \"Carga hor\\xE1ria (em horas)\",\n  source: \"cargaHoraria\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}), React.createElement(ReferenceInput, {\n  source: \"categoriaId\",\n  label: \"Categoria\",\n  reference: \"Categoria\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(SelectInput, {\n  optionText: \"nome\",\n  optionValue: \"id\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n})), React.createElement(ReferenceInput, {\n  source: \"eventoId\",\n  label: \"Evento\",\n  reference: \"Eventos\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, React.createElement(SelectInput, {\n  optionText: \"nome\",\n  optionValue: \"id\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n})), React.createElement(LongTextInput, {\n  label: \"Descri\\xE7\\xE3o\",\n  source: \"descricao\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}), React.createElement(LongTextInput, {\n  label: \"Pr\\xE9-requisitos\",\n  source: \"preRequisitos\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n})));\nexport default PostCreate;","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Atividade/addActivity.js"],"names":["React","Create","ReferenceInput","SimpleForm","TextInput","NumberInput","LongTextInput","SelectInput","SaveButton","Toolbar","BackButton","PostCreateToolbar","props","validateUserCreation","values","errors","nome","valor","cargaHoraria","Number","isInteger","categoriaId","descricao","PostCreate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Create,\n  ReferenceInput,\n  SimpleForm,\n  TextInput,\n  NumberInput,\n  LongTextInput,\n  SelectInput,\n  SaveButton,\n  Toolbar\n} from 'react-admin';\nimport BackButton from '../backButton';\nconst PostCreateToolbar = props => (\n  <Toolbar {...props}>\n    <SaveButton />\n    <BackButton />\n  </Toolbar>\n);\nconst validateUserCreation = values => {\n  const errors = {};\n  if (!values.nome) {\n    errors.nome = ['É necessário preencher um nome!'];\n  }\n\n  if (values.valor === null) {\n    errors.valor = ['São aceitos apenas números!'];\n  } else if (values.valor < 0) {\n    errors.valor = ['O valor precisa ser maior que ou igual a 0'];\n  }\n  if (!values.cargaHoraria) {\n    errors.cargaHoraria = ['É preciso ter uma carga horária'];\n  } else if (!Number.isInteger(values.cargaHoraria)) {\n    errors.cargaHoraria = ['São aceitos apenas números inteiros!'];\n  } else if (values.cargaHoraria < 1) {\n    errors.cargaHoraria = ['A carga horária precisa ser maior que 0'];\n  }\n  if (!values.categoriaId) {\n    errors.categoriaId = ['Selecione uma categoria'];\n  }\n  if (!values.descricao) {\n    errors.descricao = ['É necessário dar uma descrição à atividade'];\n  }\n\n  return errors;\n};\n\nexport const PostCreate = props => (\n  <Create title=\"Atividade/add\" {...props}>\n    <SimpleForm toolbar={<PostCreateToolbar />} validate={validateUserCreation}>\n      <TextInput label=\"Nome da atividade\" source=\"nome\" />\n\n      <NumberInput label=\"Valor\" source=\"valor\" />\n      <NumberInput label=\"Carga horária (em horas)\" source=\"cargaHoraria\" />\n      <ReferenceInput\n        source=\"categoriaId\"\n        label=\"Categoria\"\n        reference=\"Categoria\"\n      >\n        <SelectInput optionText=\"nome\" optionValue=\"id\" />\n      </ReferenceInput>\n      <ReferenceInput source=\"eventoId\" label=\"Evento\" reference=\"Eventos\">\n        <SelectInput optionText=\"nome\" optionValue=\"id\" />\n      </ReferenceInput>\n      <LongTextInput label=\"Descrição\" source=\"descricao\" />\n      <LongTextInput label=\"Pré-requisitos\" source=\"preRequisitos\" />\n    </SimpleForm>\n  </Create>\n);\n\nexport default PostCreate;\n"]},"metadata":{},"sourceType":"module"}