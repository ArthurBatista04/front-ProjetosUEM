{"ast":null,"code":"import _objectSpread from \"/home/arthur/UEM/front-ProjetosUEM/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/Opcao/editOpcao.js\";\nimport React, { Fragment } from 'react';\nimport { Edit, EditController, ReferenceField, List, TextInput, TabbedForm, FormTab, BooleanField, SaveButton, Toolbar, required, ReferenceManyField, Datagrid, CardActions, downloadCSV, ExportButton, TextField } from 'react-admin';\nimport { unparse as convertToCSV } from 'papaparse/papaparse.min';\nimport BackBotton from '../backButton';\n\nconst exporter = async (records, fetchRelatedRecords) => {\n  if (records[0]) {\n    const data = records.map(record => _objectSpread({}, record, {\n      nome: record.inscrito.usuario.nome,\n      email: record.inscrito.usuario.email,\n      valor: record.booleanResp ? 'Verdadeiro' : 'Falso'\n    }));\n    const csv = convertToCSV({\n      data,\n      fields: ['nome', 'email', 'valor']\n    });\n    downloadCSV(csv, 'Usuarios');\n  }\n};\n\nconst PostCreateToolbar = props => React.createElement(Toolbar, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}), React.createElement(SaveButton, {\n  redirect: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), React.createElement(BackBotton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}));\n\nconst PostActions = ({\n  currentSort,\n  opcaoId,\n  resource\n}) => React.createElement(CardActions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(ExportButton, {\n  resource: resource,\n  sort: currentSort,\n  filter: {\n    opcaoId: opcaoId\n  },\n  exporter: exporter,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}));\n\nexport const PostCreate = props => React.createElement(EditController, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}), ({\n  resource,\n  record,\n  redirect,\n  save,\n  basePath,\n  version\n}) => {\n  return React.createElement(TabbedForm, {\n    basePath: basePath,\n    redirect: redirect,\n    resource: resource,\n    record: record,\n    save: save,\n    version: version,\n    toolbar: React.createElement(PostCreateToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(FormTab, {\n    label: \"Dados op\\xE7\\xE3o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    label: \"Nome da op\\xE7\\xE3o\",\n    validate: required(),\n    source: \"valor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(FormTab, {\n    label: \"Inscritos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Edit, Object.assign({\n    actions: null,\n    title: \"\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(ReferenceManyField, Object.assign({}, props, {\n    basePath: basePath,\n    resource: resource,\n    record: record,\n    reference: \"Respostas\",\n    target: \"opcaoId\",\n    title: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(List, Object.assign({\n    title: \"\",\n    actions: React.createElement(PostActions, Object.assign({\n      opcaoId: props.id\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })),\n    bulkActionButtons: false,\n    filter: {\n      opcaoId: props.id\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Datagrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(ReferenceField, {\n    linkType: false,\n    label: \"Nome\",\n    reference: \"Inscritos\",\n    source: \"inscritoId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(ReferenceField, {\n    linkType: false,\n    label: \"nome\",\n    reference: \"Usuarios\",\n    source: \"usuarioId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    source: \"nome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))), React.createElement(ReferenceField, {\n    linkType: false,\n    label: \"Email\",\n    reference: \"Inscritos\",\n    source: \"inscritoId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(ReferenceField, {\n    linkType: false,\n    label: \"Email\",\n    reference: \"Usuarios\",\n    source: \"usuarioId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    source: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }))), React.createElement(BooleanField, {\n    label: \"Resposta\",\n    source: \"booleanResp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))))))));\n});\nexport default PostCreate;","map":{"version":3,"sources":["/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/Opcao/editOpcao.js"],"names":["React","Fragment","Edit","EditController","ReferenceField","List","TextInput","TabbedForm","FormTab","BooleanField","SaveButton","Toolbar","required","ReferenceManyField","Datagrid","CardActions","downloadCSV","ExportButton","TextField","unparse","convertToCSV","BackBotton","exporter","records","fetchRelatedRecords","data","map","record","nome","inscrito","usuario","email","valor","booleanResp","csv","fields","PostCreateToolbar","props","PostActions","currentSort","opcaoId","resource","PostCreate","redirect","save","basePath","version","id"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport {\n  Edit,\n  EditController,\n  ReferenceField,\n  List,\n  TextInput,\n  TabbedForm,\n  FormTab,\n  BooleanField,\n  SaveButton,\n  Toolbar,\n  required,\n  ReferenceManyField,\n  Datagrid,\n  CardActions,\n  downloadCSV,\n  ExportButton,\n  TextField\n} from 'react-admin';\nimport { unparse as convertToCSV } from 'papaparse/papaparse.min';\nimport BackBotton from '../backButton';\n\nconst exporter = async (records, fetchRelatedRecords) => {\n  if (records[0]) {\n    const data = records.map(record => ({\n      ...record,\n      nome: record.inscrito.usuario.nome,\n      email: record.inscrito.usuario.email,\n      valor: record.booleanResp ? 'Verdadeiro' : 'Falso'\n    }));\n    const csv = convertToCSV({\n      data,\n      fields: ['nome', 'email', 'valor']\n    });\n    downloadCSV(csv, 'Usuarios');\n  }\n};\nconst PostCreateToolbar = props => (\n  <Toolbar {...props}>\n    <SaveButton redirect={false} />\n    <BackBotton />\n  </Toolbar>\n);\nconst PostActions = ({ currentSort, opcaoId, resource }) => (\n  <CardActions>\n    <ExportButton\n      resource={resource}\n      sort={currentSort}\n      filter={{ opcaoId: opcaoId }}\n      exporter={exporter}\n    />\n  </CardActions>\n);\n\nexport const PostCreate = props => (\n  <EditController {...props}>\n    {({ resource, record, redirect, save, basePath, version }) => {\n      return (\n        <TabbedForm\n          basePath={basePath}\n          redirect={redirect}\n          resource={resource}\n          record={record}\n          save={save}\n          version={version}\n          toolbar={<PostCreateToolbar />}\n        >\n          <FormTab label=\"Dados opção\">\n            <TextInput\n              label=\"Nome da opção\"\n              validate={required()}\n              source=\"valor\"\n            />\n          </FormTab>\n          <FormTab label=\"Inscritos\">\n            <Fragment>\n              <Edit actions={null} title=\"\" {...props}>\n                <ReferenceManyField\n                  {...props}\n                  basePath={basePath}\n                  resource={resource}\n                  record={record}\n                  reference=\"Respostas\"\n                  target=\"opcaoId\"\n                  title={false}\n                >\n                  <List\n                    title=\"\"\n                    actions={<PostActions {...{ opcaoId: props.id }} />}\n                    bulkActionButtons={false}\n                    filter={{ opcaoId: props.id }}\n                    {...props}\n                  >\n                    <Datagrid>\n                      <ReferenceField\n                        linkType={false}\n                        label=\"Nome\"\n                        reference=\"Inscritos\"\n                        source=\"inscritoId\"\n                      >\n                        <ReferenceField\n                          linkType={false}\n                          label=\"nome\"\n                          reference=\"Usuarios\"\n                          source=\"usuarioId\"\n                        >\n                          <TextField source=\"nome\" />\n                        </ReferenceField>\n                      </ReferenceField>\n                      <ReferenceField\n                        linkType={false}\n                        label=\"Email\"\n                        reference=\"Inscritos\"\n                        source=\"inscritoId\"\n                      >\n                        <ReferenceField\n                          linkType={false}\n                          label=\"Email\"\n                          reference=\"Usuarios\"\n                          source=\"usuarioId\"\n                        >\n                          <TextField source=\"email\" />\n                        </ReferenceField>\n                      </ReferenceField>\n                      <BooleanField label=\"Resposta\" source=\"booleanResp\" />\n                    </Datagrid>\n                  </List>\n                </ReferenceManyField>\n              </Edit>\n            </Fragment>\n          </FormTab>\n        </TabbedForm>\n      );\n    }}\n  </EditController>\n);\n\nexport default PostCreate;\n"]},"metadata":{},"sourceType":"module"}