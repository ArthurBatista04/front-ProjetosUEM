{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Ajudante/solicitacaoAjudante.js\";\nimport React, { Component, Fragment } from 'react';\nimport M from 'materialize-css';\nimport Header from '../Header/Header';\nimport Axios from 'axios';\nimport PathName from '../pathConst';\nimport ShowInfo from './showInfo';\nimport CardLogin from './cardLogin';\nimport Swal from 'sweetalert2';\nimport expression from '../Login/regex';\nimport { Redirect } from 'react-router-dom';\n\nclass solicitacaoAjudante extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userLogged: false,\n      usuario: {},\n      evento: {},\n      Token: {},\n      name: '',\n      password: '',\n      redirect: false,\n      openDialogBox: false,\n      requirementKey: Math.random()\n    };\n\n    this.handleClickConfirmar = () => {\n      const _this$state = this.state,\n            usuario = _this$state.usuario,\n            evento = _this$state.evento,\n            Token = _this$state.Token;\n      const newSolicitacao = {\n        usuarioId: usuario.id,\n        eventoId: evento.id\n      };\n      Axios.post(\"://\".concat(PathName, \"/pet/api/Solicitacoes\"), newSolicitacao, Token).then(res => {\n        this.setState({\n          redirect: true\n        });\n        return Swal.fire({\n          type: 'success',\n          title: 'Sua solicitação foi realizada com sucesso'\n        });\n      }).catch(err => {\n        return Swal.fire({\n          type: 'error',\n          title: 'Ops! algo deu errado',\n          text: err.response.data.error.message\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.verifyEmail = email => {\n      return expression.test(String(email).toLowerCase());\n    };\n\n    this.handleCloseClick = () => {\n      this.setState({\n        openDialogBox: false\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        openDialogBox: true\n      });\n    };\n\n    this.handleSignIn = async e => {\n      e.preventDefault();\n      const _this$state2 = this.state,\n            name = _this$state2.name,\n            password = _this$state2.password;\n      const newLogin = {};\n\n      if (this.verifyEmail(name)) {\n        newLogin.email = name.toLowerCase();\n        newLogin.password = password;\n      } else {\n        newLogin.username = name.toLowerCase();\n        newLogin.password = password;\n      }\n\n      Axios.post(\"https://\".concat(PathName, \"/pet/api/Usuarios/login\"), newLogin).then(async res => {\n        localStorage.setItem('user_id', res.data.userId);\n        localStorage.setItem('access_token', res.data.id);\n        this.getDataAfterLogin();\n        this.setState({\n          userLogged: true\n        });\n      }).catch(err => {\n        return Swal.fire({\n          type: 'error',\n          title: 'Ops! algo deu errado',\n          text: err.response.data.error.message,\n          timer: 3000,\n          onBeforeOpen: () => {\n            this.setState({\n              openDialogBox: false\n            });\n          },\n          onClose: () => {\n            this.setState({\n              openDialogBox: true\n            });\n          }\n        });\n      });\n    };\n\n    this.getDataAfterLogin = () => {\n      this.setState({\n        requirementKey: Math.random()\n      });\n      const userId = localStorage.getItem('user_id');\n      const token = localStorage.getItem('access_token');\n      const Token = {\n        headers: {\n          Authorization: token\n        }\n      };\n      const id = this.props.id;\n\n      if (userId === null) {\n        this.setState({\n          userLogged: false\n        });\n      } else {\n        this.setState({\n          userLogged: true,\n          userId,\n          eventoId: id,\n          Token\n        });\n        Axios.all([Axios.get(\"https://\".concat(PathName, \"/pet/api/Eventos/\").concat(id)), Axios.get(\"https://\".concat(PathName, \"/pet/api/Usuarios/\").concat(userId), Token)]).then(Axios.spread((eventoRes, usuarioRes) => {\n          this.setState({\n            evento: eventoRes.data,\n            usuario: usuarioRes.data\n          });\n        }));\n      }\n    };\n  }\n\n  componentWillMount() {\n    const userId = localStorage.getItem('user_id');\n    const token = localStorage.getItem('access_token');\n    const Token = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const id = this.props.id;\n\n    if (userId === null) {\n      this.setState({\n        userLogged: false\n      });\n    } else {\n      this.setState({\n        userLogged: true,\n        userId,\n        eventoId: id,\n        Token\n      });\n      Axios.all([Axios.get(\"http://\".concat(PathName, \"/pet/api/Eventos/\").concat(id)), Axios.get(\"http://\".concat(PathName, \"/pet/api/Usuarios/\").concat(userId), Token)]).then(Axios.spread((eventoRes, usuarioRes) => {\n        this.setState({\n          evento: eventoRes.data,\n          usuario: usuarioRes.data\n        });\n      }));\n    }\n  }\n\n  componentDidMount() {\n    const elem = document.querySelectorAll('.modal');\n    M.Modal.init(elem);\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          usuario = _this$state3.usuario,\n          userLogged = _this$state3.userLogged,\n          evento = _this$state3.evento,\n          name = _this$state3.name,\n          password = _this$state3.password,\n          redirect = _this$state3.redirect,\n          openDialogBox = _this$state3.openDialogBox;\n\n    if (redirect) {\n      return React.createElement(Redirect, {\n        to: \"/pet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      });\n    }\n\n    if (userLogged) {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(ShowInfo, {\n        usuario: usuario,\n        evento: evento,\n        handleClickConfirmar: this.handleClickConfirmar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Header, {\n        key: this.state.requirementKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(CardLogin, {\n        handleChange: this.handleChange,\n        handleSignIn: this.handleSignIn,\n        name: name,\n        password: password,\n        open: openDialogBox,\n        handleCloseClick: this.handleCloseClick,\n        handleClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default solicitacaoAjudante;","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Ajudante/solicitacaoAjudante.js"],"names":["React","Component","Fragment","M","Header","Axios","PathName","ShowInfo","CardLogin","Swal","expression","Redirect","solicitacaoAjudante","state","userLogged","usuario","evento","Token","name","password","redirect","openDialogBox","requirementKey","Math","random","handleClickConfirmar","newSolicitacao","usuarioId","id","eventoId","post","then","res","setState","fire","type","title","catch","err","text","response","data","error","message","handleChange","e","target","value","verifyEmail","email","test","String","toLowerCase","handleCloseClick","handleClick","handleSignIn","preventDefault","newLogin","username","localStorage","setItem","userId","getDataAfterLogin","timer","onBeforeOpen","onClose","getItem","token","headers","Authorization","props","all","get","spread","eventoRes","usuarioRes","componentWillMount","componentDidMount","elem","document","querySelectorAll","Modal","init","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport M from 'materialize-css';\nimport Header from '../Header/Header';\nimport Axios from 'axios';\nimport PathName from '../pathConst';\nimport ShowInfo from './showInfo';\nimport CardLogin from './cardLogin';\nimport Swal from 'sweetalert2';\nimport expression from '../Login/regex';\nimport { Redirect } from 'react-router-dom';\nclass solicitacaoAjudante extends Component {\n  componentWillMount() {\n    const userId = localStorage.getItem('user_id');\n    const token = localStorage.getItem('access_token');\n    const Token = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const { id } = this.props;\n    if (userId === null) {\n      this.setState({ userLogged: false });\n    } else {\n      this.setState({ userLogged: true, userId, eventoId: id, Token });\n      Axios.all([\n        Axios.get(`http://${PathName}/pet/api/Eventos/${id}`),\n        Axios.get(`http://${PathName}/pet/api/Usuarios/${userId}`, Token)\n      ]).then(\n        Axios.spread((eventoRes, usuarioRes) => {\n          this.setState({\n            evento: eventoRes.data,\n            usuario: usuarioRes.data\n          });\n        })\n      );\n    }\n  }\n\n  componentDidMount() {\n    const elem = document.querySelectorAll('.modal');\n    M.Modal.init(elem);\n  }\n\n  state = {\n    userLogged: false,\n    usuario: {},\n    evento: {},\n    Token: {},\n    name: '',\n    password: '',\n    redirect: false,\n    openDialogBox: false,\n    requirementKey: Math.random()\n  };\n\n  handleClickConfirmar = () => {\n    const { usuario, evento, Token } = this.state;\n    const newSolicitacao = {\n      usuarioId: usuario.id,\n      eventoId: evento.id\n    };\n    Axios.post(`://${PathName}/pet/api/Solicitacoes`, newSolicitacao, Token)\n      .then(res => {\n        this.setState({ redirect: true });\n        return Swal.fire({\n          type: 'success',\n          title: 'Sua solicitação foi realizada com sucesso'\n        });\n      })\n      .catch(err => {\n        return Swal.fire({\n          type: 'error',\n          title: 'Ops! algo deu errado',\n          text: err.response.data.error.message\n        });\n      });\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  verifyEmail = email => {\n    return expression.test(String(email).toLowerCase());\n  };\n\n  handleCloseClick = () => {\n    this.setState({ openDialogBox: false });\n  };\n\n  handleClick = () => {\n    this.setState({ openDialogBox: true });\n  };\n  handleSignIn = async e => {\n    e.preventDefault();\n    const { name, password } = this.state;\n    const newLogin = {};\n    if (this.verifyEmail(name)) {\n      newLogin.email = name.toLowerCase();\n      newLogin.password = password;\n    } else {\n      newLogin.username = name.toLowerCase();\n      newLogin.password = password;\n    }\n    Axios.post(`https://${PathName}/pet/api/Usuarios/login`, newLogin)\n      .then(async res => {\n        localStorage.setItem('user_id', res.data.userId);\n        localStorage.setItem('access_token', res.data.id);\n        this.getDataAfterLogin();\n        this.setState({ userLogged: true });\n      })\n      .catch(err => {\n        return Swal.fire({\n          type: 'error',\n          title: 'Ops! algo deu errado',\n          text: err.response.data.error.message,\n          timer: 3000,\n          onBeforeOpen: () => {\n            this.setState({ openDialogBox: false });\n          },\n          onClose: () => {\n            this.setState({ openDialogBox: true });\n          }\n        });\n      });\n  };\n\n  getDataAfterLogin = () => {\n    this.setState({ requirementKey: Math.random() });\n    const userId = localStorage.getItem('user_id');\n    const token = localStorage.getItem('access_token');\n    const Token = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const { id } = this.props;\n    if (userId === null) {\n      this.setState({ userLogged: false });\n    } else {\n      this.setState({ userLogged: true, userId, eventoId: id, Token });\n      Axios.all([\n        Axios.get(`https://${PathName}/pet/api/Eventos/${id}`),\n        Axios.get(`https://${PathName}/pet/api/Usuarios/${userId}`, Token)\n      ]).then(\n        Axios.spread((eventoRes, usuarioRes) => {\n          this.setState({\n            evento: eventoRes.data,\n            usuario: usuarioRes.data\n          });\n        })\n      );\n    }\n  };\n  render() {\n    const {\n      usuario,\n      userLogged,\n      evento,\n      name,\n      password,\n      redirect,\n      openDialogBox\n    } = this.state;\n    if (redirect) {\n      return <Redirect to=\"/pet\" />;\n    }\n    if (userLogged) {\n      return (\n        <Fragment>\n          <Header />\n          <ShowInfo\n            usuario={usuario}\n            evento={evento}\n            handleClickConfirmar={this.handleClickConfirmar}\n          />\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Header key={this.state.requirementKey} />\n          <CardLogin\n            handleChange={this.handleChange}\n            handleSignIn={this.handleSignIn}\n            name={name}\n            password={password}\n            open={openDialogBox}\n            handleCloseClick={this.handleCloseClick}\n            handleClick={this.handleClick}\n          />\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default solicitacaoAjudante;\n"]},"metadata":{},"sourceType":"module"}