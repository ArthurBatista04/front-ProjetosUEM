{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/Turma/grantPresenceButton.js\";\nimport { connect } from 'react-redux';\nimport { change, submit, isSubmitting } from 'redux-form';\nimport React, { Component, Fragment } from 'react';\nimport { required, Button, showNotification, SelectInput, SaveButton, ReferenceField, TextField, CREATE, SimpleForm, withDataProvider, GET_MANY_REFERENCE, crudUpdateMany } from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/Today';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nclass PostQuickCreateButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false,\n      showDialog: false,\n      days: null\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        showDialog: true\n      });\n    };\n\n    this.handleCloseClick = () => {\n      this.setState({\n        showDialog: false\n      });\n    };\n\n    this.handleSaveClick = () => {\n      const submit = this.props.submit; // Trigger a submit of our custom quick create form\n      // This is needed because our modal action buttons are oustide the form\n\n      submit('post-quick-create');\n    };\n\n    this.handleSubmit = values => {\n      const _this$props = this.props,\n            record = _this$props.record,\n            dataProvider = _this$props.dataProvider,\n            showNotification = _this$props.showNotification;\n      dataProvider(CREATE, 'Presencas', {\n        data: {\n          diaId: values.dia,\n          inscricaoId: record.id,\n          responsavelPresencaId: localStorage.getItem('user_id')\n        }\n      }, {\n        onSuccess: {\n          refresh: true\n        }\n      }).then(res => {\n        if (res.data.id !== undefined) showNotification('Presença lançada com sucesso!');\n      });\n      this.setState({\n        showDialog: false\n      });\n    };\n\n    this.componentWillMount = async () => {\n      const dataProvider = this.props.dataProvider;\n      await dataProvider(GET_MANY_REFERENCE, 'Dias', {\n        pagination: {\n          page: 1,\n          perPage: 0\n        },\n        sort: {\n          field: 'id',\n          order: 'DESC'\n        },\n        target: 'turmaId',\n        id: this.props.turmId\n      }, {\n        onError: {\n          notification: {\n            body: 'Error: algo deu errado!',\n            level: 'warning'\n          }\n        }\n      }).then(dias => {\n        dias.data.forEach(element => {\n          element.dia = new Date(element.dia).toLocaleDateString('pt-BR', {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric'\n          });\n        });\n        this.setState({\n          days: dias.data\n        });\n      });\n    };\n  }\n\n  render() {\n    const showDialog = this.state.showDialog;\n    const _this$props2 = this.props,\n          isSubmitting = _this$props2.isSubmitting,\n          record = _this$props2.record,\n          basePath = _this$props2.basePath;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClick,\n      label: \"Lan\\xE7ar presen\\xE7a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(IconContentAdd, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      fullWidth: true,\n      open: showDialog,\n      onClose: this.handleCloseClick,\n      \"aria-label\": \"Lan\\xE7ar presen\\xE7a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Dados da presen\\xE7a\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(SimpleForm // We override the redux-form name to avoid collision with the react-admin main form\n    , {\n      form: \"post-quick-create\",\n      resource: \"Inscricoes\" // We override the redux-form onSubmit prop to handle the submission ourselves\n      ,\n      onSubmit: this.handleSubmit // We want no toolbar at all as we have our modal actions\n      ,\n      toolbar: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(ReferenceField, {\n      label: \"Nome do inscrito\",\n      reference: \"Inscritos\",\n      source: \"inscritoId\",\n      basePath: basePath,\n      record: record,\n      linkType: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(ReferenceField, {\n      label: \"Nome\",\n      reference: \"Usuarios\",\n      source: \"usuarioId\",\n      linkType: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))), React.createElement(SelectInput, {\n      label: \"Dia da presen\\xE7a\",\n      validate: required(),\n      source: \"dia\",\n      optionText: \"dia\",\n      optionValue: \"id\",\n      choices: this.state.days,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(SaveButton, {\n      label: \"Confirmar\",\n      saving: isSubmitting,\n      onClick: this.handleSaveClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"ra.action.cancel\",\n      onClick: this.handleCloseClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(IconCancel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nPostQuickCreateButton.propTypes = {\n  dataProvider: PropTypes.func.isRequired,\n  showNotification: PropTypes.func,\n  dispatch: PropTypes.func.isRequired,\n  record: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting('post-quick-create')(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n  showNotification,\n  submit\n};\nexport default connect(mapStateToProps, mapDispatchToProps, undefined, {\n  showNotification\n}, {\n  crudUpdateMany\n})(withDataProvider(PostQuickCreateButton));","map":{"version":3,"sources":["/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/Turma/grantPresenceButton.js"],"names":["connect","change","submit","isSubmitting","React","Component","Fragment","required","Button","showNotification","SelectInput","SaveButton","ReferenceField","TextField","CREATE","SimpleForm","withDataProvider","GET_MANY_REFERENCE","crudUpdateMany","IconContentAdd","IconCancel","Dialog","DialogTitle","PropTypes","DialogContent","DialogActions","PostQuickCreateButton","state","error","showDialog","days","handleClick","setState","handleCloseClick","handleSaveClick","props","handleSubmit","values","record","dataProvider","data","diaId","dia","inscricaoId","id","responsavelPresencaId","localStorage","getItem","onSuccess","refresh","then","res","undefined","componentWillMount","pagination","page","perPage","sort","field","order","target","turmId","onError","notification","body","level","dias","forEach","element","Date","toLocaleDateString","weekday","year","month","day","hour","minute","render","basePath","propTypes","func","isRequired","dispatch","object","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { change, submit, isSubmitting } from 'redux-form';\nimport React, { Component, Fragment } from 'react';\nimport {\n  required,\n  Button,\n  showNotification,\n  SelectInput,\n  SaveButton,\n  ReferenceField,\n  TextField,\n  CREATE,\n  SimpleForm,\n  withDataProvider,\n  GET_MANY_REFERENCE,\n  crudUpdateMany\n} from 'react-admin';\n\nimport IconContentAdd from '@material-ui/icons/Today';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nclass PostQuickCreateButton extends Component {\n  state = {\n    error: false,\n    showDialog: false,\n    days: null\n  };\n\n  handleClick = () => {\n    this.setState({ showDialog: true });\n  };\n\n  handleCloseClick = () => {\n    this.setState({ showDialog: false });\n  };\n\n  handleSaveClick = () => {\n    const { submit } = this.props;\n\n    // Trigger a submit of our custom quick create form\n    // This is needed because our modal action buttons are oustide the form\n    submit('post-quick-create');\n  };\n\n  handleSubmit = values => {\n    const { record, dataProvider, showNotification } = this.props;\n    dataProvider(\n      CREATE,\n      'Presencas',\n      {\n        data: {\n          diaId: values.dia,\n          inscricaoId: record.id,\n          responsavelPresencaId: localStorage.getItem('user_id')\n        }\n      },\n      {\n        onSuccess: {\n          refresh: true\n        }\n      }\n    ).then(res => {\n      if (res.data.id !== undefined)\n        showNotification('Presença lançada com sucesso!');\n    });\n\n    this.setState({ showDialog: false });\n  };\n\n  componentWillMount = async () => {\n    const { dataProvider } = this.props;\n    await dataProvider(\n      GET_MANY_REFERENCE,\n      'Dias',\n      {\n        pagination: { page: 1, perPage: 0 },\n        sort: { field: 'id', order: 'DESC' },\n        target: 'turmaId',\n        id: this.props.turmId\n      },\n      {\n        onError: {\n          notification: {\n            body: 'Error: algo deu errado!',\n            level: 'warning'\n          }\n        }\n      }\n    ).then(dias => {\n      dias.data.forEach(element => {\n        element.dia = new Date(element.dia).toLocaleDateString('pt-BR', {\n          weekday: 'long',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n          hour: 'numeric',\n          minute: 'numeric'\n        });\n      });\n      this.setState({ days: dias.data });\n    });\n  };\n\n  render() {\n    const { showDialog } = this.state;\n    const { isSubmitting, record, basePath } = this.props;\n\n    return (\n      <Fragment>\n        <Button onClick={this.handleClick} label=\"Lançar presença\">\n          <IconContentAdd />\n        </Button>\n        <Dialog\n          fullWidth\n          open={showDialog}\n          onClose={this.handleCloseClick}\n          aria-label=\"Lançar presença\"\n        >\n          <DialogTitle>Dados da presença</DialogTitle>\n          <DialogContent>\n            <SimpleForm\n              // We override the redux-form name to avoid collision with the react-admin main form\n              form=\"post-quick-create\"\n              resource=\"Inscricoes\"\n              // We override the redux-form onSubmit prop to handle the submission ourselves\n              onSubmit={this.handleSubmit}\n              // We want no toolbar at all as we have our modal actions\n              toolbar={null}\n            >\n              <ReferenceField\n                label=\"Nome do inscrito\"\n                reference=\"Inscritos\"\n                source=\"inscritoId\"\n                basePath={basePath}\n                record={record}\n                linkType={false}\n              >\n                <ReferenceField\n                  label=\"Nome\"\n                  reference=\"Usuarios\"\n                  source=\"usuarioId\"\n                  linkType={false}\n                >\n                  <TextField source=\"nome\" />\n                </ReferenceField>\n              </ReferenceField>\n\n              <SelectInput\n                label=\"Dia da presença\"\n                validate={required()}\n                source=\"dia\"\n                optionText=\"dia\"\n                optionValue=\"id\"\n                choices={this.state.days}\n              />\n            </SimpleForm>\n          </DialogContent>\n          <DialogActions>\n            <SaveButton\n              label=\"Confirmar\"\n              saving={isSubmitting}\n              onClick={this.handleSaveClick}\n            />\n            <Button label=\"ra.action.cancel\" onClick={this.handleCloseClick}>\n              <IconCancel />\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nPostQuickCreateButton.propTypes = {\n  dataProvider: PropTypes.func.isRequired,\n  showNotification: PropTypes.func,\n  dispatch: PropTypes.func.isRequired,\n  record: PropTypes.object\n};\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting('post-quick-create')(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n  showNotification,\n  submit\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  undefined,\n  { showNotification },\n  { crudUpdateMany }\n)(withDataProvider(PostQuickCreateButton));\n"]},"metadata":{},"sourceType":"module"}