{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/Turma/showDates.js\";\nimport { connect } from \"react-redux\";\nimport { change, submit, isSubmitting } from \"redux-form\";\nimport React, { Component, Fragment } from \"react\";\nimport { List, Link, DateField, Datagrid, Button, withDataProvider } from \"react-admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconContentAdd from \"@material-ui/icons/DateRange\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nclass PostQuickCreateButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false,\n      showDialog: false,\n      days: null\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        showDialog: true\n      });\n    };\n\n    this.handleCloseClick = () => {\n      this.setState({\n        showDialog: false\n      });\n    };\n\n    this.handleSaveClick = () => {\n      const submit = this.props.submit; // Trigger a submit of our custom quick create form\n      // This is needed because our modal action buttons are oustide the form\n\n      submit(\"post-quick-create\");\n    };\n\n    this.handleSubmit = values => {};\n  }\n\n  render() {\n    const showDialog = this.state.showDialog; // const { isSubmitting, basePath } = this.props;\n\n    const LinkToRelatedPost = ({\n      record\n    }) => React.createElement(Link, {\n      to: \"/Dias/\".concat(record.id, \"/show\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"inherit\",\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Visualizar lista de presen\\xE7a\"));\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClick,\n      label: \"Visualizar dias\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(IconContentAdd, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      fullWidth: true,\n      open: showDialog,\n      onClose: this.handleCloseClick,\n      \"aria-label\": \"Visualizar dias\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Dias\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(List, Object.assign({\n      basePath: \"Dias\",\n      resource: \"Dias\",\n      actions: false,\n      bulkActionButtons: false,\n      location: \"\",\n      filter: {\n        turmaId: this.props.turmId\n      }\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Datagrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(DateField, {\n      source: \"dia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(LinkToRelatedPost, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nPostQuickCreateButton.propTypes = {\n  dataProvider: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  record: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting(\"post-quick-create\")(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n  submit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withDataProvider(PostQuickCreateButton));","map":{"version":3,"sources":["/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/Turma/showDates.js"],"names":["connect","change","submit","isSubmitting","React","Component","Fragment","List","Link","DateField","Datagrid","Button","withDataProvider","Typography","IconContentAdd","Dialog","DialogTitle","PropTypes","DialogContent","PostQuickCreateButton","state","error","showDialog","days","handleClick","setState","handleCloseClick","handleSaveClick","props","handleSubmit","values","render","LinkToRelatedPost","record","id","turmaId","turmId","propTypes","dataProvider","func","isRequired","dispatch","object","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport { change, submit, isSubmitting } from \"redux-form\";\nimport React, { Component, Fragment } from \"react\";\nimport {\n  List,\n  Link,\n  DateField,\n  Datagrid,\n  Button,\n  withDataProvider,\n} from \"react-admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconContentAdd from \"@material-ui/icons/DateRange\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nclass PostQuickCreateButton extends Component {\n  state = {\n    error: false,\n    showDialog: false,\n    days: null\n  };\n\n  handleClick = () => {\n    this.setState({ showDialog: true });\n  };\n\n  handleCloseClick = () => {\n    this.setState({ showDialog: false });\n  };\n\n  handleSaveClick = () => {\n    const { submit } = this.props;\n\n    // Trigger a submit of our custom quick create form\n    // This is needed because our modal action buttons are oustide the form\n    submit(\"post-quick-create\");\n  };\n\n  handleSubmit = values => {};\n\n  render() {\n    const { showDialog } = this.state;\n    // const { isSubmitting, basePath } = this.props;\n    const LinkToRelatedPost = ({ record }) => (\n      <Link to={`/Dias/${record.id}/show`}>\n        <Typography variant=\"caption\" color=\"inherit\" align=\"right\">\n          Visualizar lista de presenÃ§a\n        </Typography>\n      </Link>\n    );\n\n    return (\n      <Fragment>\n        <Button onClick={this.handleClick} label=\"Visualizar dias\">\n          <IconContentAdd />\n        </Button>\n        <Dialog\n          fullWidth\n          open={showDialog}\n          onClose={this.handleCloseClick}\n          aria-label=\"Visualizar dias\"\n        >\n          <DialogTitle>Dias</DialogTitle>\n          <DialogContent>\n            <List\n              basePath=\"Dias\"\n              resource=\"Dias\"\n              actions={false}\n              bulkActionButtons={false}\n              location=\"\"\n              filter={{ turmaId: this.props.turmId }}\n              {...this.props}\n            >\n              <Datagrid>\n                <DateField source=\"dia\" />\n                <LinkToRelatedPost />\n              </Datagrid>\n            </List>\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nPostQuickCreateButton.propTypes = {\n  dataProvider: PropTypes.func.isRequired,\n\n  dispatch: PropTypes.func.isRequired,\n  record: PropTypes.object\n};\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting(\"post-quick-create\")(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n\n  submit\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withDataProvider(PostQuickCreateButton));\n"]},"metadata":{},"sourceType":"module"}