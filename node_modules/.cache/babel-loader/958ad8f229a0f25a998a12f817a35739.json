{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Usuario/Perfil/trocarEmail.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Header from \"../../Header/Header\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { TextInput } from \"react-materialize\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport PathName from \"../../pathConst.js\";\n\nclass TrocarEmail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handlePassChange = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            newEmail = _this$state.newEmail,\n            confirmNewEmail = _this$state.confirmNewEmail;\n      const userId = localStorage.getItem(\"user_id\");\n\n      if (newEmail !== confirmNewEmail) {\n        return Swal.fire({\n          type: \"error\",\n          title: \"Confirmação de e-mail inválida\",\n          text: \"Por favor, verifique os e-mails digitados\"\n        });\n      }\n\n      axios.patch(\"\".concat(PathName, \"/pet/api/Usuarios/\").concat(userId), {\n        email: this.state.newEmail\n      }, {\n        headers: {\n          Authorization: localStorage.getItem(\"access_token\")\n        }\n      }).then(async res => {\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"user_id\");\n        localStorage.removeItem(\"petiano\");\n        this.setState({\n          redirect: true\n        });\n        return Swal.fire({\n          type: \"success\",\n          title: \"E-mail alterada com sucesso!\",\n          text: \"Por favor, confirme seu e-mail antes de realizar um novo login\"\n        });\n      }).catch(err => {\n        return Swal.fire({\n          type: \"error\",\n          title: \"Ops! algo deu errado\",\n          text: err.response.data.error.message\n        });\n      });\n    };\n\n    this.state = {\n      newEmail: \"\",\n      confirmNewEmail: \"\",\n      redirect: false\n    };\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: \"/pet/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handlePassChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"indigo-text center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Alterar E-mail\"), React.createElement(\"div\", {\n      className: \"conatiner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      email: true,\n      validate: true,\n      label: \"Novo e-mail\",\n      name: \"newEmail\",\n      error: \"Insira o novo e-mail\",\n      success: \"\",\n      required: true,\n      onChange: e => {\n        this.handleChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      email: true,\n      validate: true,\n      label: \"Confirmar novo e-mail\",\n      name: \"confirmNewEmail\",\n      error: \"Insira o novo e-mail novamente\",\n      success: \"\",\n      required: true,\n      onChange: e => {\n        this.handleChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      name: \"btn_senha\",\n      className: \"btn blue waves-effect waves-light lighten-1 right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Alterar E-mail\"), React.createElement(Link, {\n      to: \"/pet/perfil\",\n      className: \"btn waves-effect waves-light blue lighten-1 left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Voltar\"))))));\n  }\n\n}\n\nexport default TrocarEmail;","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Usuario/Perfil/trocarEmail.js"],"names":["React","Component","Fragment","Header","axios","Swal","TextInput","Redirect","Link","PathName","TrocarEmail","constructor","props","handleChange","e","setState","target","name","value","handlePassChange","preventDefault","state","newEmail","confirmNewEmail","userId","localStorage","getItem","fire","type","title","text","patch","email","headers","Authorization","then","res","removeItem","redirect","catch","err","response","data","error","message","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Header from \"../../Header/Header\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { TextInput } from \"react-materialize\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport PathName from \"../../pathConst.js\";\n\nclass TrocarEmail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newEmail: \"\",\n      confirmNewEmail: \"\",\n      redirect: false\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handlePassChange = async e => {\n    e.preventDefault();\n    const { newEmail, confirmNewEmail } = this.state;\n    const userId = localStorage.getItem(\"user_id\");\n    if (newEmail !== confirmNewEmail) {\n      return Swal.fire({\n        type: \"error\",\n        title: \"Confirmação de e-mail inválida\",\n        text: \"Por favor, verifique os e-mails digitados\"\n      });\n    }\n    axios\n      .patch(\n        `${PathName}/pet/api/Usuarios/${userId}`,\n        {\n          email: this.state.newEmail\n        },\n        {\n          headers: {\n            Authorization: localStorage.getItem(\"access_token\")\n          }\n        }\n      )\n      .then(async res => {\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"user_id\");\n        localStorage.removeItem(\"petiano\");\n        this.setState({ redirect: true });\n        return Swal.fire({\n          type: \"success\",\n          title: \"E-mail alterada com sucesso!\",\n          text: \"Por favor, confirme seu e-mail antes de realizar um novo login\"\n        });\n      })\n      .catch(err => {\n        return Swal.fire({\n          type: \"error\",\n          title: \"Ops! algo deu errado\",\n          text: err.response.data.error.message\n        });\n      });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/pet/login\" />;\n    }\n    return (\n      <Fragment>\n        <Header />\n\n        <div className=\"container\">\n          <div className=\"card-panel\">\n            <div className=\"row\">\n              <form onSubmit={this.handlePassChange}>\n                <h5 className=\"indigo-text center\">Alterar E-mail</h5>\n                <div className=\"conatiner\">\n                  <TextInput\n                    s={12}\n                    email\n                    validate\n                    label=\"Novo e-mail\"\n                    name=\"newEmail\"\n                    error=\"Insira o novo e-mail\"\n                    success=\"\"\n                    required\n                    onChange={e => {\n                      this.handleChange(e);\n                    }}\n                  />\n\n                  <TextInput\n                    s={12}\n                    email\n                    validate\n                    label=\"Confirmar novo e-mail\"\n                    name=\"confirmNewEmail\"\n                    error=\"Insira o novo e-mail novamente\"\n                    success=\"\"\n                    required\n                    onChange={e => {\n                      this.handleChange(e);\n                    }}\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  name=\"btn_senha\"\n                  className=\"btn blue waves-effect waves-light lighten-1 right\"\n                >\n                  Alterar E-mail\n                </button>\n                <Link\n                  to=\"/pet/perfil\"\n                  className=\"btn waves-effect waves-light blue lighten-1 left\"\n                >\n                  Voltar\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default TrocarEmail;\n"]},"metadata":{},"sourceType":"module"}