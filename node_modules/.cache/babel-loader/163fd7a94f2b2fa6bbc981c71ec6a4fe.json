{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Petianos/Petianos.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Header from \"../Header/Header\";\nimport CardsPetianos from \"./CardsPetianos\";\nimport Axios from \"axios\";\nimport PathName from \"../pathConst\";\nimport { GridList, GridListTile } from \"@material-ui/core\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport compose from \"recompose/compose\";\nimport ReactLoading from \"react-loading\";\nimport CardError from \"../cardError\";\n\nclass Petianos extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      petianos: []\n    };\n  }\n\n  componentWillMount() {\n    const filter = {\n      order: {\n        nome: \"ASC\"\n      }\n    };\n    Axios.get(\"\".concat(PathName, \"/pet/api/Usuarios/petianos?filter=\").concat(JSON.stringify(filter))).then(res => this.setState({\n      petianos: res.data,\n      done: true\n    })).catch(err => {\n      this.setState({\n        done: true\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          petianos = _this$state.petianos,\n          done = _this$state.done;\n    const width = this.props.width;\n    const columns = width === \"xs\" || width === \"sm\" ? 1 : 3;\n\n    if (!done) {\n      return React.createElement(\"div\", {\n        style: styleLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(ReactLoading, {\n        type: \"bars\",\n        color: \"#42a5f5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    } else if (petianos.length === 0) {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(CardError, {\n        titulo: \"Não consegui encontrar nenhum petiano\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(GridList, {\n        cellHeight: \"auto\",\n        cols: columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, petianos.map((petiano, i) => React.createElement(GridListTile, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(CardsPetianos, {\n        petiano: petiano,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }))))));\n    }\n  }\n\n}\n\nconst styleLoading = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  marginTop: \"-50px\",\n  marginLeft: \"-50px\",\n  width: \"100px\",\n  height: \"100px\"\n};\nexport default compose(withWidth())(Petianos);","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Petianos/Petianos.js"],"names":["React","Component","Fragment","Header","CardsPetianos","Axios","PathName","GridList","GridListTile","withWidth","compose","ReactLoading","CardError","Petianos","state","petianos","componentWillMount","filter","order","nome","get","JSON","stringify","then","res","setState","data","done","catch","err","render","width","props","columns","styleLoading","length","map","petiano","i","position","top","left","marginTop","marginLeft","height"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Header from \"../Header/Header\";\nimport CardsPetianos from \"./CardsPetianos\";\nimport Axios from \"axios\";\nimport PathName from \"../pathConst\";\nimport { GridList, GridListTile } from \"@material-ui/core\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport compose from \"recompose/compose\";\nimport ReactLoading from \"react-loading\";\nimport CardError from \"../cardError\";\nclass Petianos extends Component {\n  componentWillMount() {\n    const filter = {\n      order: {\n        nome: \"ASC\"\n      }\n    };\n    Axios.get(\n      `${PathName}/pet/api/Usuarios/petianos?filter=${JSON.stringify(\n        filter\n      )}`\n    )\n      .then(res => this.setState({ petianos: res.data, done: true }))\n      .catch(err => {\n        this.setState({ done: true });\n      });\n  }\n\n  state = {\n    petianos: []\n  };\n\n  render() {\n    const { petianos, done } = this.state;\n    const { width } = this.props;\n    const columns = width === \"xs\" || width === \"sm\" ? 1 : 3;\n    if (!done) {\n      return (\n        <div style={styleLoading}>\n          <ReactLoading type={\"bars\"} color={\"#42a5f5\"} />\n        </div>\n      );\n    } else if (petianos.length === 0) {\n      return (\n        <Fragment>\n          <Header />\n          <CardError titulo={\"Não consegui encontrar nenhum petiano\"} />\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Header />\n          <div className=\"container\">\n            <GridList cellHeight={\"auto\"} cols={columns}>\n              {petianos.map((petiano, i) => (\n                <GridListTile key={i}>\n                  <CardsPetianos petiano={petiano} />\n                </GridListTile>\n              ))}\n            </GridList>\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n\nconst styleLoading = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  marginTop: \"-50px\",\n  marginLeft: \"-50px\",\n  width: \"100px\",\n  height: \"100px\"\n};\n\nexport default compose(withWidth())(Petianos);\n"]},"metadata":{},"sourceType":"module"}