{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Evento/addEvent.js\";\nimport React from \"react\";\nimport { Create, SimpleForm, TextInput, required, LongTextInput, BooleanInput } from \"react-admin\";\nimport Br from \"date-fns/locale/pt-BR\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DateTimeInput } from \"react-admin-date-inputs\";\nDateFnsUtils.prototype.getStartOfMonth = DateFnsUtils.prototype.startOfMonth;\n\nconst validateUserCreation = values => {\n  const errors = {};\n\n  if (!values.nome) {\n    errors.nome = [\"É necessário preencher um nome!\"];\n  }\n\n  if (values.valor === null) {\n    errors.valor = [\"São aceitos apenas números!\"];\n  } else if (values.valor < 0) {\n    errors.valor = [\"O valor precisa ser maior que ou igual a 0\"];\n  }\n\n  if (!values.descricao) {\n    errors.descricao = [\"É necessário dar uma descrição à atividade\"];\n  }\n\n  return errors;\n};\n\nexport const PostCreate = props => React.createElement(Create, Object.assign({\n  redirect: false,\n  title: \"Evento\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), React.createElement(SimpleForm, {\n  redirect: false,\n  validate: validateUserCreation,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(TextInput, {\n  label: \"Nome do evento\",\n  source: \"nome\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), React.createElement(LongTextInput, {\n  label: \"Descri\\xE7\\xE3o\",\n  source: \"descricao\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), React.createElement(LongTextInput, {\n  label: \"Email enviado na inscri\\xE7\\xE3o\",\n  source: \"mensagemPagamento\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), React.createElement(TextInput, {\n  label: \"Link de pagamento\",\n  source: \"linkPagamento\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), React.createElement(DateTimeInput, {\n  label: \"In\\xEDcio evento\",\n  source: \"dataInicio\",\n  providerOptions: {\n    utils: DateFnsUtils,\n    locale: Br\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), React.createElement(DateTimeInput, {\n  providerOptions: {\n    utils: DateFnsUtils,\n    locale: Br\n  },\n  label: \"T\\xE9rmino evento\",\n  source: \"dataFim\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}), React.createElement(DateTimeInput, {\n  label: \"In\\xEDcio inscri\\xE7\\xF5es\",\n  source: \"inicioInscricoes\",\n  providerOptions: {\n    utils: DateFnsUtils,\n    locale: Br\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}), React.createElement(DateTimeInput, {\n  label: \" T\\xE9rmino inscri\\xE7\\xF5es\",\n  source: \"fimInscricoes\",\n  providerOptions: {\n    utils: DateFnsUtils,\n    locale: Br\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}), React.createElement(BooleanInput, {\n  validate: required(),\n  defaultValue: false,\n  label: \"Gratuito\",\n  source: \"gratuito\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n})));\nexport default PostCreate;","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Evento/addEvent.js"],"names":["React","Create","SimpleForm","TextInput","required","LongTextInput","BooleanInput","Br","DateFnsUtils","DateTimeInput","prototype","getStartOfMonth","startOfMonth","validateUserCreation","values","errors","nome","valor","descricao","PostCreate","props","utils","locale"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  LongTextInput,\n  BooleanInput\n} from \"react-admin\";\nimport Br from \"date-fns/locale/pt-BR\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DateTimeInput } from \"react-admin-date-inputs\";\nDateFnsUtils.prototype.getStartOfMonth = DateFnsUtils.prototype.startOfMonth;\nconst validateUserCreation = values => {\n  const errors = {};\n  if (!values.nome) {\n    errors.nome = [\"É necessário preencher um nome!\"];\n  }\n  if (values.valor === null) {\n    errors.valor = [\"São aceitos apenas números!\"];\n  } else if (values.valor < 0) {\n    errors.valor = [\"O valor precisa ser maior que ou igual a 0\"];\n  }\n\n  if (!values.descricao) {\n    errors.descricao = [\"É necessário dar uma descrição à atividade\"];\n  }\n\n  return errors;\n};\n\nexport const PostCreate = props => (\n  <Create redirect={false} title=\"Evento\" {...props}>\n    <SimpleForm redirect={false} validate={validateUserCreation}>\n      <TextInput label=\"Nome do evento\" source=\"nome\" />\n      <LongTextInput label=\"Descrição\" source=\"descricao\" />\n      <LongTextInput\n        label=\"Email enviado na inscrição\"\n        source=\"mensagemPagamento\"\n      />\n      <TextInput label=\"Link de pagamento\" source=\"linkPagamento\"></TextInput>\n      <DateTimeInput\n        label=\"Início evento\"\n        source=\"dataInicio\"\n        providerOptions={{ utils: DateFnsUtils, locale: Br }}\n      />\n      <DateTimeInput\n        providerOptions={{ utils: DateFnsUtils, locale: Br }}\n        label=\"Término evento\"\n        source=\"dataFim\"\n      />\n      <DateTimeInput\n        label=\"Início inscrições\"\n        source=\"inicioInscricoes\"\n        providerOptions={{ utils: DateFnsUtils, locale: Br }}\n      />\n      <DateTimeInput\n        label=\" Término inscrições\"\n        source=\"fimInscricoes\"\n        providerOptions={{ utils: DateFnsUtils, locale: Br }}\n      />\n      <BooleanInput\n        validate={required()}\n        defaultValue={false}\n        label=\"Gratuito\"\n        source=\"gratuito\"\n      ></BooleanInput>\n    </SimpleForm>\n  </Create>\n);\n\nexport default PostCreate;\n"]},"metadata":{},"sourceType":"module"}