{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Eventos/DadosAdiconais/confirmacaoInscrito.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { Redirect } from \"react-router-dom\";\nimport DadosAdicionais from \"./dadosAdicionais\";\nimport PathName from \"../../pathConst\";\nimport Header from \"../../Header/Header\";\nimport formatDate from \"../formatDate\";\n\nclass confirmaçãoInscrito extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      usuario: [],\n      evento: [],\n      valoresEvento: [],\n      voltarDadosAdicionais: false,\n      voltarEvento: false,\n      Token: {}\n    };\n\n    this.formatValor = valor => {\n      return valor === 0 ? \"Gratuito\" : \"R$ \".concat(valor);\n    };\n\n    this.handleClickVoltar = () => {\n      const evento = this.state.evento;\n\n      if (evento.hasDadoAdicional) {\n        this.setState({\n          voltarDadosAdicionais: true\n        });\n      } else {\n        this.setState({\n          voltarEvento: true\n        });\n      }\n    };\n\n    this.handleClick = () => {\n      const _this$props = this.props,\n            respostas = _this$props.respostas,\n            idEvento = _this$props.idEvento;\n      const newInscrito = {\n        pago: false,\n        cargaHoraria: 0,\n        usuarioId: this.state.usuario.id,\n        eventoId: idEvento\n      };\n      Axios.post(\"http://\".concat(PathName, \"/pet/api/Inscritos\"), newInscrito, this.state.Token).then(async res => {\n        const status = await res.status;\n\n        if (status >= 200 && status < 300) {\n          const inscritoId = res.data.id;\n\n          if (respostas.length === 0) {\n            // se o evento não possui dados adicionais\n            this.setState({\n              voltarEvento: true\n            });\n            return Swal.fire({\n              type: \"success\",\n              title: \"Inscrição realizada com sucesso\"\n            });\n          } else {\n            respostas.map(resp => resp.inscritoId = inscritoId);\n            Axios.post(\"http://\".concat(PathName, \"/pet/api/Respostas/array\"), {\n              data: respostas\n            }, this.state.Token).then(resp => {\n              this.setState({\n                voltarEvento: true\n              });\n              return Swal.fire({\n                type: \"success\",\n                title: \"Inscrição realizada com sucesso\",\n                text: \"Foi enviado uma confirmação de inscrição da atividade para seu e-mail\"\n              });\n            }).catch(err => {\n              return Swal.fire({\n                type: \"error\",\n                title: \"Ops! algo deu errado\",\n                text: err.response.data.message\n              });\n            });\n          }\n        }\n      }).catch(err => {\n        return Swal.fire({\n          type: \"error\",\n          title: \"Ops! algo deu errado\",\n          text: err.response.data.error.message\n        });\n      });\n    };\n  }\n\n  componentWillMount() {\n    const idEvento = this.props.idEvento;\n    const userID = localStorage.getItem(\"user_id\");\n    const token = localStorage.getItem(\"access_token\");\n    const Token = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const filterEvento = {\n      include: \"valores\"\n    };\n    this.setState({\n      Token: Token\n    });\n    Axios.all([Axios.get(\"http://\".concat(PathName, \"/pet/api/Usuarios/\").concat(userID), Token), Axios.get(\"http://\".concat(PathName, \"/pet/api/Eventos/\").concat(idEvento, \"?filter=\").concat(JSON.stringify(filterEvento)))]).then(Axios.spread((usuarioRes, eventoRes) => {\n      this.setState({\n        usuario: usuarioRes.data,\n        evento: eventoRes.data,\n        valoresEvento: eventoRes.data.valores\n      });\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          usuario = _this$state.usuario,\n          evento = _this$state.evento,\n          valoresEvento = _this$state.valoresEvento,\n          voltarDadosAdicionais = _this$state.voltarDadosAdicionais,\n          voltarEvento = _this$state.voltarEvento;\n    const idEvento = this.props.idEvento;\n\n    if (voltarDadosAdicionais) {\n      return React.createElement(DadosAdicionais, {\n        idEvento: idEvento,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      });\n    }\n\n    if (voltarEvento) {\n      return React.createElement(Redirect, {\n        to: \"/pet/eventos/\".concat(idEvento),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-panel z-depth-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"sobre\",\n      className: \"col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"person\"), \"Suas informa\\xE7\\xF5es\"), React.createElement(\"div\", {\n      className: \"basicInfo grey-text text-darken-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Nome:\"), React.createElement(\"span\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, usuario.nome)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"CPF:\"), React.createElement(\"span\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, usuario.cpf)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"E-mail:\"), React.createElement(\"span\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, usuario.email))), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"event\"), \"Informa\\xE7\\xF5es do evento\"), React.createElement(\"div\", {\n      className: \"basicInfo grey-text text-darken-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Nome:\"), React.createElement(\"span\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, evento.nome)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Data de \\xEDnicio:\"), React.createElement(\"span\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, formatDate(String(evento.dataInicio)))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Data t\\xE9rmino:\"), React.createElement(\"span\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, formatDate(String(evento.dataFim)))), valoresEvento.map(valor => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, valor.nome), React.createElement(\"span\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.formatValor(valor.preco))))), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: \"btn blue lighten-1 right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Confirmar inscri\\xE7\\xE3o\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn blue lighten-1 left\",\n      onClick: this.handleClickVoltar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Voltar\")))));\n  }\n\n}\n\nexport default confirmaçãoInscrito;","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Eventos/DadosAdiconais/confirmacaoInscrito.js"],"names":["React","Component","Fragment","Axios","Swal","Redirect","DadosAdicionais","PathName","Header","formatDate","confirmaçãoInscrito","state","usuario","evento","valoresEvento","voltarDadosAdicionais","voltarEvento","Token","formatValor","valor","handleClickVoltar","hasDadoAdicional","setState","handleClick","props","respostas","idEvento","newInscrito","pago","cargaHoraria","usuarioId","id","eventoId","post","then","res","status","inscritoId","data","length","fire","type","title","map","resp","text","catch","err","response","message","error","componentWillMount","userID","localStorage","getItem","token","headers","Authorization","filterEvento","include","all","get","JSON","stringify","spread","usuarioRes","eventoRes","valores","render","nome","cpf","email","String","dataInicio","dataFim","preco"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { Redirect } from \"react-router-dom\";\nimport DadosAdicionais from \"./dadosAdicionais\";\nimport PathName from \"../../pathConst\";\nimport Header from \"../../Header/Header\";\nimport formatDate from \"../formatDate\";\n\nclass confirmaçãoInscrito extends Component {\n  componentWillMount() {\n    const { idEvento } = this.props;\n    const userID = localStorage.getItem(\"user_id\");\n    const token = localStorage.getItem(\"access_token\");\n    const Token = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const filterEvento = {\n      include: \"valores\"\n    };\n    this.setState({ Token: Token });\n    Axios.all([\n      Axios.get(`http://${PathName}/pet/api/Usuarios/${userID}`, Token),\n      Axios.get(\n        `http://${PathName}/pet/api/Eventos/${idEvento}?filter=${JSON.stringify(\n          filterEvento\n        )}`\n      )\n    ]).then(\n      Axios.spread((usuarioRes, eventoRes) => {\n        this.setState({\n          usuario: usuarioRes.data,\n          evento: eventoRes.data,\n          valoresEvento: eventoRes.data.valores\n        });\n      })\n    );\n  }\n\n  state = {\n    usuario: [],\n    evento: [],\n    valoresEvento: [],\n    voltarDadosAdicionais: false,\n    voltarEvento: false,\n    Token: {}\n  };\n\n  formatValor = valor => {\n    return valor === 0 ? \"Gratuito\" : `R$ ${valor}`;\n  };\n\n  handleClickVoltar = () => {\n    const { evento } = this.state;\n    if (evento.hasDadoAdicional) {\n      this.setState({ voltarDadosAdicionais: true });\n    } else {\n      this.setState({ voltarEvento: true });\n    }\n  };\n\n  handleClick = () => {\n    const { respostas, idEvento } = this.props;\n    const newInscrito = {\n      pago: false,\n      cargaHoraria: 0,\n      usuarioId: this.state.usuario.id,\n      eventoId: idEvento\n    };\n    Axios.post(\n      `http://${PathName}/pet/api/Inscritos`,\n      newInscrito,\n      this.state.Token\n    )\n      .then(async res => {\n        const status = await res.status;\n        if (status >= 200 && status < 300) {\n          const inscritoId = res.data.id;\n          if (respostas.length === 0) {\n            // se o evento não possui dados adicionais\n            this.setState({ voltarEvento: true });\n            return Swal.fire({\n              type: \"success\",\n              title: \"Inscrição realizada com sucesso\"\n            });\n          } else {\n            respostas.map(resp => (resp.inscritoId = inscritoId));\n            Axios.post(\n              `http://${PathName}/pet/api/Respostas/array`,\n              { data: respostas },\n              this.state.Token\n            )\n              .then(resp => {\n                this.setState({ voltarEvento: true });\n                return Swal.fire({\n                  type: \"success\",\n                  title: \"Inscrição realizada com sucesso\",\n                  text:\n                    \"Foi enviado uma confirmação de inscrição da atividade para seu e-mail\"\n                });\n              })\n              .catch(err => {\n                return Swal.fire({\n                  type: \"error\",\n                  title: \"Ops! algo deu errado\",\n                  text: err.response.data.message\n                });\n              });\n          }\n        }\n      })\n      .catch(err => {\n        return Swal.fire({\n          type: \"error\",\n          title: \"Ops! algo deu errado\",\n          text: err.response.data.error.message\n        });\n      });\n  };\n\n  render() {\n    const {\n      usuario,\n      evento,\n      valoresEvento,\n      voltarDadosAdicionais,\n      voltarEvento\n    } = this.state;\n    const { idEvento } = this.props;\n    if (voltarDadosAdicionais) {\n      return <DadosAdicionais idEvento={idEvento} />;\n    }\n    if (voltarEvento) {\n      return <Redirect to={`/pet/eventos/${idEvento}`} />;\n    }\n    return (\n      <Fragment>\n        <Header />\n        <div className=\"container\">\n          <div className=\"card-panel z-depth-2\">\n            <div className=\"row\">\n              <div id=\"sobre\" className=\"col s12\" />\n              <h5>\n                <i className=\"material-icons left\">person</i>Suas informações\n              </h5>\n              <div className=\"basicInfo grey-text text-darken-2\">\n                <p>\n                  <b>Nome:</b>\n                  <span className=\"right\">{usuario.nome}</span>\n                </p>\n                <p>\n                  <b>CPF:</b>\n                  <span className=\"right\">{usuario.cpf}</span>\n                </p>\n                <p>\n                  <b>E-mail:</b>\n                  <span className=\"right\">{usuario.email}</span>\n                </p>\n              </div>\n              <h5>\n                <i className=\"material-icons left\">event</i>Informações do\n                evento\n              </h5>\n              <div className=\"basicInfo grey-text text-darken-2\">\n                <p>\n                  <b>Nome:</b>\n                  <span className=\"right\">{evento.nome}</span>\n                </p>\n                <p>\n                  <b>Data de ínicio:</b>\n                  <span className=\"right\">\n                    {formatDate(String(evento.dataInicio))}\n                  </span>\n                </p>\n                <p>\n                  <b>Data término:</b>\n                  <span className=\"right\">\n                    {formatDate(String(evento.dataFim))}\n                  </span>\n                </p>\n                {valoresEvento.map(valor => (\n                  <p>\n                    <b>{valor.nome}</b>\n                    <span className=\"right\">\n                      {this.formatValor(valor.preco)}\n                    </span>\n                  </p>\n                ))}\n              </div>\n              <button\n                onClick={this.handleClick}\n                className={\"btn blue lighten-1 right\"}\n              >\n                Confirmar inscrição\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn blue lighten-1 left\"\n                onClick={this.handleClickVoltar}\n              >\n                {\"Voltar\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default confirmaçãoInscrito;\n"]},"metadata":{},"sourceType":"module"}