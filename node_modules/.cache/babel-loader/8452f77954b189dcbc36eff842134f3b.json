{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Ajudante/addAjudante.js\";\nimport React from 'react';\nimport { Create, required, SimpleForm, ReferenceInput, Toolbar, SelectInput, AutocompleteArrayInput, ReferenceArrayInput } from 'react-admin';\nimport BackButton from '../backButton';\nimport RealSaveButton from './CustomSaveButton';\n\nconst PostCreateToolbar = props => React.createElement(Toolbar, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}), React.createElement(RealSaveButton, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})), React.createElement(BackButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}));\n\nconst validateUserCreation = values => {\n  const errors = {};\n\n  if (!values.usuarioId) {\n    errors.usuarioId = ['É necessário preencher pelo menos um email!'];\n  } else if (new Set(values.usuarioId).size !== values.usuarioId.length) {\n    errors.usuarioId = ['Não pode haver emails repetidos'];\n  }\n\n  if (!values.eventoId) {\n    errors.eventoId = ['É necessário preencher o nome do evento!'];\n  }\n\n  return errors;\n};\n\nexport const PostCreate = props => React.createElement(Create, Object.assign({\n  title: \"Ajudante/add\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), React.createElement(SimpleForm, {\n  validate: validateUserCreation,\n  toolbar: React.createElement(PostCreateToolbar, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, console.log(props), React.createElement(ReferenceArrayInput, {\n  source: \"usuarioId\",\n  label: \"E-mail dos ajudantes\",\n  reference: \"Usuarios\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(AutocompleteArrayInput, {\n  optionText: \"email\",\n  source: \"usuarioId\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}))));\nexport default PostCreate;","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Ajudante/addAjudante.js"],"names":["React","Create","required","SimpleForm","ReferenceInput","Toolbar","SelectInput","AutocompleteArrayInput","ReferenceArrayInput","BackButton","RealSaveButton","PostCreateToolbar","props","validateUserCreation","values","errors","usuarioId","Set","size","length","eventoId","PostCreate","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,cAJF,EAKEC,OALF,EAMEC,WANF,EAOEC,sBAPF,EAQEC,mBARF,QASO,aATP;AAUA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;;AACA,MAAMC,iBAAiB,GAAGC,KAAK,IAC7B,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACE,oBAAC,cAAD,oBAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF;;AAMA,MAAMC,oBAAoB,GAAGC,MAAM,IAAI;AACrC,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,MAAM,CAACE,SAAZ,EAAuB;AACrBD,IAAAA,MAAM,CAACC,SAAP,GAAmB,CAAC,6CAAD,CAAnB;AACD,GAFD,MAEO,IAAI,IAAIC,GAAJ,CAAQH,MAAM,CAACE,SAAf,EAA0BE,IAA1B,KAAmCJ,MAAM,CAACE,SAAP,CAAiBG,MAAxD,EAAgE;AACrEJ,IAAAA,MAAM,CAACC,SAAP,GAAmB,CAAC,iCAAD,CAAnB;AACD;;AACD,MAAI,CAACF,MAAM,CAACM,QAAZ,EAAsB;AACpBL,IAAAA,MAAM,CAACK,QAAP,GAAkB,CAAC,0CAAD,CAAlB;AACD;;AAED,SAAOL,MAAP;AACD,CAZD;;AAcA,OAAO,MAAMM,UAAU,GAAGT,KAAK,IAC7B,oBAAC,MAAD;AAAQ,EAAA,KAAK,EAAC;AAAd,GAAiCA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACE,oBAAC,UAAD;AACE,EAAA,QAAQ,EAAEC,oBADZ;AAEE,EAAA,OAAO,EAAE,oBAAC,iBAAD,oBAAuBD,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIGU,OAAO,CAACC,GAAR,CAAYX,KAAZ,CAJH,EAKE,oBAAC,mBAAD;AACE,EAAA,MAAM,EAAC,WADT;AAEE,EAAA,KAAK,EAAC,sBAFR;AAGE,EAAA,SAAS,EAAC,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKE,oBAAC,sBAAD;AAAwB,EAAA,UAAU,EAAC,OAAnC;AAA2C,EAAA,MAAM,EAAC,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CALF,CADF,CADK;AAkBP,eAAeS,UAAf","sourcesContent":["import React from 'react';\nimport {\n  Create,\n  required,\n  SimpleForm,\n  ReferenceInput,\n  Toolbar,\n  SelectInput,\n  AutocompleteArrayInput,\n  ReferenceArrayInput\n} from 'react-admin';\nimport BackButton from '../backButton';\nimport RealSaveButton from './CustomSaveButton';\nconst PostCreateToolbar = props => (\n  <Toolbar {...props}>\n    <RealSaveButton {...props}></RealSaveButton>\n    <BackButton />\n  </Toolbar>\n);\nconst validateUserCreation = values => {\n  const errors = {};\n  if (!values.usuarioId) {\n    errors.usuarioId = ['É necessário preencher pelo menos um email!'];\n  } else if (new Set(values.usuarioId).size !== values.usuarioId.length) {\n    errors.usuarioId = ['Não pode haver emails repetidos'];\n  }\n  if (!values.eventoId) {\n    errors.eventoId = ['É necessário preencher o nome do evento!'];\n  }\n\n  return errors;\n};\n\nexport const PostCreate = props => (\n  <Create title=\"Ajudante/add\" {...props}>\n    <SimpleForm\n      validate={validateUserCreation}\n      toolbar={<PostCreateToolbar {...props} />}\n    >\n      {console.log(props)}\n      <ReferenceArrayInput\n        source=\"usuarioId\"\n        label=\"E-mail dos ajudantes\"\n        reference=\"Usuarios\"\n      >\n        <AutocompleteArrayInput optionText=\"email\" source=\"usuarioId\" />\n      </ReferenceArrayInput>\n    </SimpleForm>\n  </Create>\n);\n\nexport default PostCreate;\n"]},"metadata":{},"sourceType":"module"}