{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/addPicButton.js\";\nimport { connect } from 'react-redux';\nimport { change, submit, isSubmitting } from 'redux-form';\nimport React, { Component, Fragment } from 'react';\nimport { Button, SaveButton, ImageField, required, ImageInput, UPDATE, SimpleForm, withDataProvider } from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/PhotoCamera';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nclass PostQuickCreateButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false,\n      showDialog: false\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        showDialog: true\n      });\n    };\n\n    this.handleCloseClick = () => {\n      this.setState({\n        showDialog: false\n      });\n    };\n\n    this.handleSaveClick = () => {\n      const submit = this.props.submit; // Trigger a submit of our custom quick create form\n      // This is needed because our modal action buttons are oustide the form\n\n      submit('post-quick-create');\n    };\n\n    this.convertFileToBase64 = async file => await new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      if (!file.rawFile) reject();\n      reader.readAsDataURL(file.rawFile);\n\n      reader.onload = () => resolve(reader.result);\n    });\n\n    this.handleSubmit = async values => {\n      const _this$props = this.props,\n            dataProvider = _this$props.dataProvider,\n            record = _this$props.record,\n            resource = _this$props.resource;\n      console.log(values.foto);\n      if (!values.foto) return this.setState({\n        showDialog: false\n      });\n      let file = await this.convertFileToBase64(values.foto);\n      dataProvider(UPDATE, resource, {\n        pagination: {\n          page: 1,\n          perPage: 0\n        },\n        sort: {\n          field: 'id',\n          order: 'DESC'\n        },\n        id: record.id,\n        data: {\n          foto: file\n        },\n        previousData: {\n          foto: record.foto\n        }\n      }, {\n        onSuccess: {\n          refresh: true\n        },\n        onError: {\n          notification: {\n            body: 'Error: algo deu errado!',\n            level: 'warning'\n          }\n        }\n      }).then(res => {\n        console.log(res);\n      });\n      this.setState({\n        showDialog: false\n      });\n    };\n  }\n\n  render() {\n    const showDialog = this.state.showDialog;\n    const _this$props2 = this.props,\n          isSubmitting = _this$props2.isSubmitting,\n          basePath = _this$props2.basePath,\n          record = _this$props2.record,\n          resource = _this$props2.resource;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClick,\n      label: \"Alterar foto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(IconContentAdd, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      fullWidth: true,\n      open: showDialog,\n      onClose: this.handleCloseClick,\n      \"aria-label\": \"Alterar foto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Alterar foto \"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(SimpleForm // We override the redux-form name to avoid collision with the react-admin main form\n    , {\n      form: \"post-quick-create\" // We override the redux-form onSubmit prop to handle the submission ourselves\n      ,\n      onSubmit: this.handleSubmit // We want no toolbar at all as we have our modal actions\n      ,\n      toolbar: null,\n      record: record,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(ImageInput, {\n      source: \"foto\",\n      label: \"Selecione uma image\",\n      accept: \"image/*\",\n      validate: required(),\n      placeholder: React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Arraste um arquivo para upload ou clique em selecionar arquivo (max 350kB).\"),\n      maxSize: \"250000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(ImageField, {\n      source: \"foto\",\n      label: \"Se deseja alterar, clique em confirmar\",\n      title: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(SaveButton, {\n      label: \"Confirmar\",\n      saving: isSubmitting,\n      onClick: this.handleSaveClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"ra.action.cancel\",\n      onClick: this.handleCloseClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(IconCancel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nPostQuickCreateButton.propTypes = {\n  dataProvider: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  record: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting('post-quick-create')(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n  submit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withDataProvider(PostQuickCreateButton));","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/addPicButton.js"],"names":["connect","change","submit","isSubmitting","React","Component","Fragment","Button","SaveButton","ImageField","required","ImageInput","UPDATE","SimpleForm","withDataProvider","IconContentAdd","IconCancel","Dialog","DialogTitle","PropTypes","DialogContent","DialogActions","PostQuickCreateButton","state","error","showDialog","handleClick","setState","handleCloseClick","handleSaveClick","props","convertFileToBase64","file","Promise","resolve","reject","reader","FileReader","rawFile","readAsDataURL","onload","result","handleSubmit","values","dataProvider","record","resource","console","log","foto","pagination","page","perPage","sort","field","order","id","data","previousData","onSuccess","refresh","onError","notification","body","level","then","res","render","basePath","propTypes","func","isRequired","dispatch","object","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { change, submit, isSubmitting } from 'redux-form';\nimport React, { Component, Fragment } from 'react';\nimport {\n  Button,\n  SaveButton,\n  ImageField,\n  required,\n  ImageInput,\n  UPDATE,\n  SimpleForm,\n  withDataProvider\n} from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/PhotoCamera';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nclass PostQuickCreateButton extends Component {\n  state = {\n    error: false,\n    showDialog: false\n  };\n\n  handleClick = () => {\n    this.setState({ showDialog: true });\n  };\n\n  handleCloseClick = () => {\n    this.setState({ showDialog: false });\n  };\n\n  handleSaveClick = () => {\n    const { submit } = this.props;\n\n    // Trigger a submit of our custom quick create form\n    // This is needed because our modal action buttons are oustide the form\n    submit('post-quick-create');\n  };\n\n  convertFileToBase64 = async file =>\n    await new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      if (!file.rawFile) reject();\n      reader.readAsDataURL(file.rawFile);\n\n      reader.onload = () => resolve(reader.result);\n    });\n\n  handleSubmit = async values => {\n    const { dataProvider, record, resource } = this.props;\n    console.log(values.foto);\n    if (!values.foto) return this.setState({ showDialog: false });\n\n    let file = await this.convertFileToBase64(values.foto);\n    dataProvider(\n      UPDATE,\n      resource,\n      {\n        pagination: { page: 1, perPage: 0 },\n        sort: { field: 'id', order: 'DESC' },\n        id: record.id,\n        data: { foto: file },\n        previousData: { foto: record.foto }\n      },\n      {\n        onSuccess: {\n          refresh: true\n        },\n        onError: {\n          notification: {\n            body: 'Error: algo deu errado!',\n            level: 'warning'\n          }\n        }\n      }\n    ).then(res => {\n      console.log(res);\n    });\n    this.setState({ showDialog: false });\n  };\n\n  render() {\n    const { showDialog } = this.state;\n    const { isSubmitting, basePath, record, resource } = this.props;\n\n    return (\n      <Fragment>\n        <Button onClick={this.handleClick} label=\"Alterar foto\">\n          <IconContentAdd />\n        </Button>\n        <Dialog\n          fullWidth\n          open={showDialog}\n          onClose={this.handleCloseClick}\n          aria-label=\"Alterar foto\"\n        >\n          <DialogTitle>Alterar foto </DialogTitle>\n          <DialogContent>\n            <SimpleForm\n              // We override the redux-form name to avoid collision with the react-admin main form\n              form=\"post-quick-create\"\n              // We override the redux-form onSubmit prop to handle the submission ourselves\n              onSubmit={this.handleSubmit}\n              // We want no toolbar at all as we have our modal actions\n              toolbar={null}\n              record={record}\n            >\n              <ImageInput\n                source=\"foto\"\n                label=\"Selecione uma image\"\n                accept=\"image/*\"\n                validate={required()}\n                placeholder={\n                  <p>\n                    Arraste um arquivo para upload ou clique em selecionar\n                    arquivo (max 350kB).\n                  </p>\n                }\n                maxSize=\"250000\"\n              >\n                <ImageField\n                  source=\"foto\"\n                  label=\"Se deseja alterar, clique em confirmar\"\n                  title=\"title\"\n                />\n              </ImageInput>\n            </SimpleForm>\n          </DialogContent>\n          <DialogActions>\n            <SaveButton\n              label=\"Confirmar\"\n              saving={isSubmitting}\n              onClick={this.handleSaveClick}\n            />\n            <Button label=\"ra.action.cancel\" onClick={this.handleCloseClick}>\n              <IconCancel />\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nPostQuickCreateButton.propTypes = {\n  dataProvider: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  record: PropTypes.object\n};\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting('post-quick-create')(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n\n  submit\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withDataProvider(PostQuickCreateButton));\n"]},"metadata":{},"sourceType":"module"}