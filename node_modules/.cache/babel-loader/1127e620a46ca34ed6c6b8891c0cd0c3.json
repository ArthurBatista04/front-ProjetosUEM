{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authProvider = undefined;\n\nvar _reactAdmin = require('react-admin');\n\nvar _storage = require('./storage');\n\nvar _storage2 = _interopRequireDefault(_storage);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar authProvider = function authProvider(loginApiUrl) {\n  var noAccessPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/login';\n  return function (type, params) {\n    if (type === _reactAdmin.AUTH_LOGIN) {\n      var request = new Request(loginApiUrl, {\n        method: 'POST',\n        body: JSON.stringify(params),\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      });\n      return fetch(request).then(function (response) {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n\n        return response.json();\n      }).then(function (_ref) {\n        var ttl = _ref.ttl,\n            data = _objectWithoutProperties(_ref, ['ttl']);\n\n        _storage2.default.save('lbtoken', data, ttl);\n      });\n    }\n\n    if (type === _reactAdmin.AUTH_LOGOUT) {\n      _storage2.default.remove('lbtoken');\n\n      return Promise.resolve();\n    }\n\n    if (type === _reactAdmin.AUTH_ERROR) {\n      var status = params.status;\n\n      if (status === 401 || status === 403) {\n        _storage2.default.remove('lbtoken');\n\n        return Promise.reject();\n      }\n\n      return Promise.resolve();\n    }\n\n    if (type === _reactAdmin.AUTH_CHECK) {\n      var token = _storage2.default.load('lbtoken');\n\n      if (token && token.id) {\n        return Promise.resolve();\n      } else {\n        _storage2.default.remove('lbtoken');\n\n        return Promise.reject({\n          redirectTo: noAccessPage\n        });\n      }\n    }\n\n    return Promise.reject('Unknown method');\n  };\n};\n\nexports.authProvider = authProvider;","map":null,"metadata":{},"sourceType":"script"}