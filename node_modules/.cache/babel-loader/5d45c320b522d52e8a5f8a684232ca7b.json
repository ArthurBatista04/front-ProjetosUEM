{"ast":null,"code":"import _objectWithoutProperties from \"/home/arthur/UEM/front-ProjetosUEM/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/arthur/UEM/front-ProjetosUEM/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/Turma/showTurma.js\";\nimport React from \"react\";\nimport { List, Show, ExportButton, BooleanField, ReferenceField, CardActions, downloadCSV, ReferenceManyField, Datagrid, TextField } from \"react-admin\";\nimport GrantPresence from \"./grantPresenceButton\";\nimport BackButton from \"../backButton\";\nimport { unparse as convertToCSV } from \"papaparse/papaparse.min\";\nimport ShowDates from \"./showDates\";\nimport QrCodeReader from \"./qrCode\";\nimport Pagamento from \"../statusPagamentoButton\";\n\nconst exporter = async (records, fetchRelatedRecords) => {\n  let cargaHorariasInscricoes = {};\n  await records.forEach(async element => {\n    cargaHorariasInscricoes[element.inscritoId] = element.cargaHoraria;\n  });\n  fetchRelatedRecords(records, \"inscritoId\", \"Inscritos\").then(async recordsInscritos => {\n    let inscritos = [];\n\n    for (var id in recordsInscritos) {\n      await inscritos.push(recordsInscritos[id]);\n    }\n\n    fetchRelatedRecords(inscritos, \"usuarioId\", \"Usuarios\").then(users => {\n      const data = inscritos.map(record => _objectSpread({}, record, {\n        nome: users[record.usuarioId].nome,\n        cpf: users[record.usuarioId].cpf,\n        email: users[record.usuarioId].email,\n        cargaHorariaAtividade: cargaHorariasInscricoes[record.id]\n      }));\n      const csv = convertToCSV({\n        data,\n        fields: [\"nome\", \"email\", \"cpf\", \"cargaHorariaAtividade\"]\n      });\n      downloadCSV(csv, \"Usuarios\");\n    });\n  });\n};\n\nconst PostActions = ({\n  currentSort,\n  turmId,\n  resource,\n  onUnselectItems\n}) => React.createElement(CardActions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(BackButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), React.createElement(ShowDates, Object.assign({\n  onUnselectItems: true\n}, {\n  turmId: turmId\n}, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n})), React.createElement(QrCodeReader, Object.assign({\n  turmId: turmId\n}, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n})), React.createElement(ExportButton, {\n  resource: resource,\n  sort: currentSort,\n  filter: {\n    turmaId: turmId\n  },\n  exporter: exporter,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}));\n\nexport const PostCreate = (_ref) => {\n  let permissions = _ref.permissions,\n      props = _objectWithoutProperties(_ref, [\"permissions\"]);\n\n  return React.createElement(Show, Object.assign({\n    actions: null,\n    title: \"Inscri\\xE7\\xF5es\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(ReferenceManyField, {\n    label: \"Inscri\\xE7\\xF5es\",\n    reference: \"Inscricoes\",\n    target: \"turmaId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(List, Object.assign({\n    title: \"   \",\n    filter: {\n      turmaId: props.id\n    },\n    actions: React.createElement(PostActions, Object.assign({\n      turmId: props.id\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })),\n    bulkActionButtons: false\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Datagrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(ReferenceField, {\n    label: \"Nome\",\n    reference: \"Inscritos\",\n    source: \"inscritoId\",\n    linkType: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(ReferenceField, {\n    label: \"Nome\",\n    reference: \"Usuarios\",\n    source: \"usuarioId\",\n    linkType: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    source: \"nome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), React.createElement(ReferenceField, {\n    label: \"E-mail\",\n    reference: \"Inscritos\",\n    source: \"inscritoId\",\n    linkType: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(ReferenceField, {\n    label: \"Email\",\n    reference: \"Usuarios\",\n    source: \"usuarioId\",\n    linkType: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    source: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))), React.createElement(ReferenceField, {\n    label: \"CPF\",\n    linkType: false,\n    reference: \"Inscritos\",\n    source: \"inscritoId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(ReferenceField, {\n    label: \"CPF\",\n    linkType: false,\n    reference: \"Usuarios\",\n    source: \"usuarioId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    source: \"cpf\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }))), React.createElement(BooleanField, {\n    source: \"pago\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    source: \"cargaHoraria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(GrantPresence, Object.assign({\n    turmId: props.id\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), (permissions === \"Petiano\" || permissions === \"admin\") && React.createElement(Pagamento, {\n    redirect: false,\n    label: \"Status pagamento\",\n    undoable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })))));\n};\nexport default PostCreate;","map":{"version":3,"sources":["/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/Turma/showTurma.js"],"names":["React","List","Show","ExportButton","BooleanField","ReferenceField","CardActions","downloadCSV","ReferenceManyField","Datagrid","TextField","GrantPresence","BackButton","unparse","convertToCSV","ShowDates","QrCodeReader","Pagamento","exporter","records","fetchRelatedRecords","cargaHorariasInscricoes","forEach","element","inscritoId","cargaHoraria","then","recordsInscritos","inscritos","id","push","users","data","map","record","nome","usuarioId","cpf","email","cargaHorariaAtividade","csv","fields","PostActions","currentSort","turmId","resource","onUnselectItems","turmaId","PostCreate","permissions","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  List,\n  Show,\n  ExportButton,\n  BooleanField,\n  ReferenceField,\n  CardActions,\n  downloadCSV,\n  ReferenceManyField,\n  Datagrid,\n  TextField\n} from \"react-admin\";\nimport GrantPresence from \"./grantPresenceButton\";\nimport BackButton from \"../backButton\";\nimport { unparse as convertToCSV } from \"papaparse/papaparse.min\";\nimport ShowDates from \"./showDates\";\nimport QrCodeReader from \"./qrCode\";\nimport Pagamento from \"../statusPagamentoButton\";\n\nconst exporter = async (records, fetchRelatedRecords) => {\n  let cargaHorariasInscricoes = {};\n  await records.forEach(async element => {\n    cargaHorariasInscricoes[element.inscritoId] = element.cargaHoraria;\n  });\n  fetchRelatedRecords(records, \"inscritoId\", \"Inscritos\").then(\n    async recordsInscritos => {\n      let inscritos = [];\n      for (var id in recordsInscritos) {\n        await inscritos.push(recordsInscritos[id]);\n      }\n      fetchRelatedRecords(inscritos, \"usuarioId\", \"Usuarios\").then(users => {\n        const data = inscritos.map(record => ({\n          ...record,\n          nome: users[record.usuarioId].nome,\n          cpf: users[record.usuarioId].cpf,\n          email: users[record.usuarioId].email,\n          cargaHorariaAtividade: cargaHorariasInscricoes[record.id]\n        }));\n        const csv = convertToCSV({\n          data,\n          fields: [\"nome\", \"email\", \"cpf\", \"cargaHorariaAtividade\"]\n        });\n        downloadCSV(csv, \"Usuarios\");\n      });\n    }\n  );\n};\nconst PostActions = ({ currentSort, turmId, resource, onUnselectItems }) => (\n  <CardActions>\n    <BackButton />\n    <ShowDates onUnselectItems {...{ turmId: turmId }} />\n    <QrCodeReader {...{ turmId: turmId }} />\n    <ExportButton\n      resource={resource}\n      sort={currentSort}\n      filter={{ turmaId: turmId }}\n      exporter={exporter}\n    />\n  </CardActions>\n);\n\nexport const PostCreate = ({ permissions, ...props }) => (\n  <Show actions={null} title=\"Inscrições\" {...props}>\n    <ReferenceManyField\n      label=\"Inscrições\"\n      reference=\"Inscricoes\"\n      target=\"turmaId\"\n    >\n      <List\n        title=\"   \"\n        filter={{ turmaId: props.id }}\n        actions={<PostActions {...{ turmId: props.id }} />}\n        bulkActionButtons={false}\n        {...props}\n      >\n        <Datagrid>\n          <ReferenceField\n            label=\"Nome\"\n            reference=\"Inscritos\"\n            source=\"inscritoId\"\n            linkType={false}\n          >\n            <ReferenceField\n              label=\"Nome\"\n              reference=\"Usuarios\"\n              source=\"usuarioId\"\n              linkType={false}\n            >\n              <TextField source=\"nome\" />\n            </ReferenceField>\n          </ReferenceField>\n          <ReferenceField\n            label=\"E-mail\"\n            reference=\"Inscritos\"\n            source=\"inscritoId\"\n            linkType={false}\n          >\n            <ReferenceField\n              label=\"Email\"\n              reference=\"Usuarios\"\n              source=\"usuarioId\"\n              linkType={false}\n            >\n              <TextField source=\"email\" />\n            </ReferenceField>\n          </ReferenceField>\n          <ReferenceField\n            label=\"CPF\"\n            linkType={false}\n            reference=\"Inscritos\"\n            source=\"inscritoId\"\n          >\n            <ReferenceField\n              label=\"CPF\"\n              linkType={false}\n              reference=\"Usuarios\"\n              source=\"usuarioId\"\n            >\n              <TextField source=\"cpf\" />\n            </ReferenceField>\n          </ReferenceField>\n\n          <BooleanField source=\"pago\" />\n\n          <TextField source=\"cargaHoraria\" />\n          <GrantPresence {...{ turmId: props.id }} />\n          {(permissions === \"Petiano\" || permissions === \"admin\") && (\n            <Pagamento\n              redirect={false}\n              label=\"Status pagamento\"\n              undoable={true}\n            />\n          )}\n        </Datagrid>\n      </List>\n    </ReferenceManyField>\n  </Show>\n);\n\nexport default PostCreate;\n"]},"metadata":{},"sourceType":"module"}