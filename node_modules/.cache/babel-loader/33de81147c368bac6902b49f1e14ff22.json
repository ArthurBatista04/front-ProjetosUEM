{"ast":null,"code":"import _objectWithoutProperties from \"/home/arthur/UEM/front-ProjetosUEM/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/arthur/UEM/front-ProjetosUEM/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/DadoAdicional/editDadoAdicional.js\";\nimport React, { Fragment } from 'react';\nimport { Edit, EditController, List, CardActions, TextInput, TabbedForm, FormTab, SaveButton, Toolbar, required, LongTextInput, downloadCSV, SelectInput, ExportButton, ReferenceManyField, Datagrid, BooleanInput, ReferenceField, EditButton, TextField } from 'react-admin';\nimport { unparse as convertToCSV } from 'papaparse/papaparse.min';\nimport DeleteButtonWithConfirmation from '../deleteButtonWithConfirmation';\nimport BackBotton from '../backButton';\nimport AddOpcao from './addOpcao';\n\nconst OpcoesActions = props => React.createElement(CardActions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(AddOpcao, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n})));\n\nconst PostCreateToolbar = props => React.createElement(Toolbar, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), React.createElement(SaveButton, {\n  redirect: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), React.createElement(BackBotton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}));\n\nconst TextActions = ({\n  currentSort,\n  dadoAdicionalId,\n  resource\n}) => React.createElement(CardActions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(ExportButton, {\n  resource: resource,\n  sort: currentSort,\n  filter: {\n    dadoAdicionalId: dadoAdicionalId\n  },\n  exporter: exporter,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}));\n\nconst exporter = async (records, fetchRelatedRecords) => {\n  if (records[0]) {\n    const data = records.map(record => _objectSpread({}, record, {\n      nome: record.inscrito.usuario.nome,\n      email: record.inscrito.usuario.email,\n      valor: record.textResp\n    }));\n    const csv = convertToCSV({\n      data,\n      fields: ['nome', 'email', 'valor']\n    });\n    downloadCSV(csv, 'Usuarios');\n  }\n};\n\nexport const PostCreate = (_ref) => {\n  let permissions = _ref.permissions,\n      props = _objectWithoutProperties(_ref, [\"permissions\"]);\n\n  return React.createElement(EditController, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), ({\n    resource,\n    record,\n    redirect,\n    save,\n    basePath,\n    version\n  }) => {\n    return React.createElement(TabbedForm, {\n      basePath: basePath,\n      redirect: redirect,\n      resource: resource,\n      record: record,\n      save: save,\n      version: version,\n      toolbar: React.createElement(PostCreateToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(FormTab, {\n      label: \"Informa\\xE7\\xF5es do dado adicional\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      label: \"Nome do dado adicional\",\n      validate: required(),\n      source: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(LongTextInput, {\n      label: \"Descri\\xE7\\xE3o\",\n      source: \"descricao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(BooleanInput, {\n      label: \"Possui op\\xE7\\xF5es?\",\n      source: \"respIsBoolean\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), record && record.respIsBoolean && React.createElement(TextField, {\n      source: \"selectChoice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }) && React.createElement(SelectInput, {\n      source: \"selectChoice\",\n      validate: required(),\n      defaultValue: record.selectChoice,\n      choices: [{\n        id: 'selectInput',\n        name: 'Select input'\n      }, {\n        id: 'multipleSelectInput',\n        name: 'Multiple select input '\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), record && record.respIsBoolean && React.createElement(FormTab, {\n      label: \"Op\\xE7\\xF5es\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Edit, Object.assign({\n      actions: null,\n      title: \"\"\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(ReferenceManyField, Object.assign({}, props, {\n      basePath: basePath,\n      resource: resource,\n      record: record,\n      reference: \"Opcoes\",\n      target: \"dadoAdicionalId\",\n      title: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(List, Object.assign({\n      title: \"Op\\xE7\\xF5es\",\n      bulkActionButtons: false,\n      actions: React.createElement(OpcoesActions, Object.assign({\n        dadoAdicionalId: props.id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })),\n      filter: {\n        dadoAdicionalId: props.id\n      }\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Datagrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"valor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      source: \"quantidade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(EditButton, {\n      label: \"Gerenciar dados\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), permissions === 'admin' && React.createElement(DeleteButtonWithConfirmation, {\n      redirect: false,\n      label: \"Remover op\\xE7\\xE3o\",\n      undoable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))))))), record && !record.respIsBoolean && React.createElement(FormTab, {\n      label: \"Respostas de texto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Edit, Object.assign({\n      actions: null,\n      title: \"\"\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(ReferenceManyField, Object.assign({}, props, {\n      basePath: basePath,\n      resource: resource,\n      record: record,\n      reference: \"Respostas\",\n      target: \"dadoAdicionalId\",\n      title: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(List, Object.assign({\n      title: \"\",\n      bulkActionButtons: false,\n      actions: React.createElement(TextActions, Object.assign({\n        dadoAdicionalId: props.id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })),\n      filter: {\n        dadoAdicionalId: props.id\n      }\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(Datagrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(ReferenceField, {\n      linkType: false,\n      label: \"Nome\",\n      reference: \"Inscritos\",\n      source: \"inscritoId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(ReferenceField, {\n      linkType: false,\n      label: \"nome\",\n      reference: \"Usuarios\",\n      source: \"usuarioId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))), React.createElement(ReferenceField, {\n      linkType: false,\n      label: \"Email\",\n      reference: \"Inscritos\",\n      source: \"inscritoId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(ReferenceField, {\n      linkType: false,\n      label: \"Email\",\n      reference: \"Usuarios\",\n      source: \"usuarioId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))), React.createElement(TextField, {\n      label: \"Resposta\",\n      source: \"textResp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }))))))));\n  });\n};\nexport default PostCreate;","map":{"version":3,"sources":["/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/DadoAdicional/editDadoAdicional.js"],"names":["React","Fragment","Edit","EditController","List","CardActions","TextInput","TabbedForm","FormTab","SaveButton","Toolbar","required","LongTextInput","downloadCSV","SelectInput","ExportButton","ReferenceManyField","Datagrid","BooleanInput","ReferenceField","EditButton","TextField","unparse","convertToCSV","DeleteButtonWithConfirmation","BackBotton","AddOpcao","OpcoesActions","props","PostCreateToolbar","TextActions","currentSort","dadoAdicionalId","resource","exporter","records","fetchRelatedRecords","data","map","record","nome","inscrito","usuario","email","valor","textResp","csv","fields","PostCreate","permissions","redirect","save","basePath","version","respIsBoolean","selectChoice","id","name"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport {\n  Edit,\n  EditController,\n  List,\n  CardActions,\n  TextInput,\n  TabbedForm,\n  FormTab,\n  SaveButton,\n  Toolbar,\n  required,\n  LongTextInput,\n  downloadCSV,\n  SelectInput,\n  ExportButton,\n  ReferenceManyField,\n  Datagrid,\n  BooleanInput,\n  ReferenceField,\n  EditButton,\n  TextField\n} from 'react-admin';\nimport { unparse as convertToCSV } from 'papaparse/papaparse.min';\nimport DeleteButtonWithConfirmation from '../deleteButtonWithConfirmation';\nimport BackBotton from '../backButton';\nimport AddOpcao from './addOpcao';\n\nconst OpcoesActions = props => (\n  <CardActions>\n    <AddOpcao {...props} />\n  </CardActions>\n);\nconst PostCreateToolbar = props => (\n  <Toolbar {...props}>\n    <SaveButton redirect={false} />\n    <BackBotton />\n  </Toolbar>\n);\n\nconst TextActions = ({ currentSort, dadoAdicionalId, resource }) => (\n  <CardActions>\n    <ExportButton\n      resource={resource}\n      sort={currentSort}\n      filter={{ dadoAdicionalId: dadoAdicionalId }}\n      exporter={exporter}\n    />\n  </CardActions>\n);\nconst exporter = async (records, fetchRelatedRecords) => {\n  if (records[0]) {\n    const data = records.map(record => ({\n      ...record,\n      nome: record.inscrito.usuario.nome,\n      email: record.inscrito.usuario.email,\n      valor: record.textResp\n    }));\n    const csv = convertToCSV({\n      data,\n      fields: ['nome', 'email', 'valor']\n    });\n    downloadCSV(csv, 'Usuarios');\n  }\n};\n\nexport const PostCreate = ({ permissions, ...props }) => (\n  <EditController {...props}>\n    {({ resource, record, redirect, save, basePath, version }) => {\n      return (\n        <TabbedForm\n          basePath={basePath}\n          redirect={redirect}\n          resource={resource}\n          record={record}\n          save={save}\n          version={version}\n          toolbar={<PostCreateToolbar />}\n        >\n          <FormTab label=\"Informações do dado adicional\">\n            <TextInput\n              label=\"Nome do dado adicional\"\n              validate={required()}\n              source=\"nome\"\n            />\n\n            <LongTextInput label=\"Descrição\" source=\"descricao\" />\n            <BooleanInput label=\"Possui opções?\" source=\"respIsBoolean\" />\n            {record &&\n              record.respIsBoolean && <TextField source=\"selectChoice\" /> && (\n                <SelectInput\n                  source=\"selectChoice\"\n                  validate={required()}\n                  defaultValue={record.selectChoice}\n                  choices={[\n                    { id: 'selectInput', name: 'Select input' },\n                    {\n                      id: 'multipleSelectInput',\n                      name: 'Multiple select input '\n                    }\n                  ]}\n                />\n              )}\n          </FormTab>\n          {record && record.respIsBoolean && (\n            <FormTab label=\"Opções\">\n              <Fragment>\n                <Edit actions={null} title=\"\" {...props}>\n                  <ReferenceManyField\n                    {...props}\n                    basePath={basePath}\n                    resource={resource}\n                    record={record}\n                    reference=\"Opcoes\"\n                    target=\"dadoAdicionalId\"\n                    title={false}\n                  >\n                    <List\n                      title=\"Opções\"\n                      bulkActionButtons={false}\n                      actions={\n                        <OpcoesActions {...{ dadoAdicionalId: props.id }} />\n                      }\n                      filter={{ dadoAdicionalId: props.id }}\n                      {...props}\n                    >\n                      <Datagrid>\n                        <TextField source=\"valor\" />\n                        <TextField source=\"quantidade\" />\n                        <EditButton label=\"Gerenciar dados\" />\n                        {permissions === 'admin' && (\n                          <DeleteButtonWithConfirmation\n                            redirect={false}\n                            label=\"Remover opção\"\n                            undoable={true}\n                          />\n                        )}\n                      </Datagrid>\n                    </List>\n                  </ReferenceManyField>\n                </Edit>\n              </Fragment>\n            </FormTab>\n          )}\n          {record && !record.respIsBoolean && (\n            <FormTab label=\"Respostas de texto\">\n              <Fragment>\n                <Edit actions={null} title=\"\" {...props}>\n                  <ReferenceManyField\n                    {...props}\n                    basePath={basePath}\n                    resource={resource}\n                    record={record}\n                    reference=\"Respostas\"\n                    target=\"dadoAdicionalId\"\n                    title={false}\n                  >\n                    <List\n                      title=\"\"\n                      bulkActionButtons={false}\n                      actions={\n                        <TextActions {...{ dadoAdicionalId: props.id }} />\n                      }\n                      filter={{ dadoAdicionalId: props.id }}\n                      {...props}\n                    >\n                      <Datagrid>\n                        <ReferenceField\n                          linkType={false}\n                          label=\"Nome\"\n                          reference=\"Inscritos\"\n                          source=\"inscritoId\"\n                        >\n                          <ReferenceField\n                            linkType={false}\n                            label=\"nome\"\n                            reference=\"Usuarios\"\n                            source=\"usuarioId\"\n                          >\n                            <TextField source=\"nome\" />\n                          </ReferenceField>\n                        </ReferenceField>\n                        <ReferenceField\n                          linkType={false}\n                          label=\"Email\"\n                          reference=\"Inscritos\"\n                          source=\"inscritoId\"\n                        >\n                          <ReferenceField\n                            linkType={false}\n                            label=\"Email\"\n                            reference=\"Usuarios\"\n                            source=\"usuarioId\"\n                          >\n                            <TextField source=\"email\" />\n                          </ReferenceField>\n                        </ReferenceField>\n                        <TextField label=\"Resposta\" source=\"textResp\" />\n                      </Datagrid>\n                    </List>\n                  </ReferenceManyField>\n                </Edit>\n              </Fragment>\n            </FormTab>\n          )}\n        </TabbedForm>\n      );\n    }}\n  </EditController>\n);\n\nexport default PostCreate;\n"]},"metadata":{},"sourceType":"module"}