{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Usuario/Perfil/TrocaSenha.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Header from \"../../Header/Header\";\nimport Swal from \"sweetalert2\";\nimport { TextInput } from \"react-materialize\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport PathName from \"../../pathConst.js\";\nimport Axios from \"axios\";\n\nclass TrocaSenha extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handlePassChange = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            newPassword = _this$state.newPassword,\n            confirmNewPassword = _this$state.confirmNewPassword;\n      const userId = localStorage.getItem(\"user_id\");\n\n      if (newPassword !== confirmNewPassword) {\n        return Swal.fire({\n          type: \"error\",\n          title: \"As senhas estão diferentes\",\n          text: \"É necessário que a nova senha e a confirmação sejam iguais\"\n        });\n      } else if (newPassword.length < 4) {\n        this.setState({\n          confirmPassword: \"\"\n        });\n        return Swal.fire({\n          type: \"error\",\n          title: \"Senha deve ter pelo menos 4 caracteres\",\n          text: \"Tente novamente\"\n        });\n      } else {\n        Axios.put(\"https://\".concat(PathName, \"/pet/api/Usuarios/change-password/\").concat(userId), {\n          currentPassword: this.state.currentPassword,\n          newPassword: this.state.newPassword\n        }, {\n          headers: {\n            Authorization: localStorage.getItem(\"access_token\")\n          }\n        }).then(async res => {\n          localStorage.clear();\n          this.setState({\n            redirect: true\n          });\n          return Swal.fire({\n            type: \"success\",\n            title: \"Senha alterada com sucesso!\",\n            text: \"Por favor, logue-se de novo para completar a troca da senha\"\n          });\n        }).catch(err => {\n          return Swal.fire({\n            type: \"error\",\n            title: \"Ops! algo deu errado\",\n            text: err.response.data.error.message\n          });\n        });\n      }\n    };\n\n    this.state = {\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\",\n      redirect: false\n    };\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: \"/pet/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handlePassChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"indigo-text center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Alterar senha\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      password: true,\n      validate: true,\n      label: \"Senha atual\",\n      name: \"currentPassword\",\n      error: \"Insira a senha atual\",\n      success: \"\",\n      required: true,\n      onChange: e => {\n        this.handleChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      password: true,\n      validate: true,\n      label: \"Senha nova\",\n      name: \"newPassword\",\n      error: \"Insira a nova senha\",\n      success: \"\",\n      required: true,\n      onChange: e => {\n        this.handleChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      password: true,\n      validate: true,\n      label: \"Confirme nova senha\",\n      name: \"confirmNewPassword\",\n      error: \"Confirme a nova senha\",\n      success: \"\",\n      required: true,\n      onChange: e => {\n        this.handleChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      name: \"btn_senha\",\n      className: \"btn blue waves-effect waves-light lighten-1 right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Alterar senha\"), React.createElement(Link, {\n      to: \"/pet/perfil\",\n      className: \"btn waves-effect waves-light blue lighten-1 left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Voltar\"))))));\n  }\n\n}\n\nexport default TrocaSenha;","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Usuario/Perfil/TrocaSenha.js"],"names":["React","Component","Fragment","Header","Swal","TextInput","Redirect","Link","PathName","Axios","TrocaSenha","constructor","props","handleChange","e","setState","target","name","value","handlePassChange","preventDefault","state","newPassword","confirmNewPassword","userId","localStorage","getItem","fire","type","title","text","length","confirmPassword","put","currentPassword","headers","Authorization","then","res","clear","redirect","catch","err","response","data","error","message","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Header from \"../../Header/Header\";\nimport Swal from \"sweetalert2\";\nimport { TextInput } from \"react-materialize\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport PathName from \"../../pathConst.js\";\nimport Axios from \"axios\";\n\nclass TrocaSenha extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\",\n      redirect: false\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handlePassChange = async e => {\n    e.preventDefault();\n    const { newPassword, confirmNewPassword } = this.state;\n    const userId = localStorage.getItem(\"user_id\");\n\n    if (newPassword !== confirmNewPassword) {\n      return Swal.fire({\n        type: \"error\",\n        title: \"As senhas estão diferentes\",\n        text: \"É necessário que a nova senha e a confirmação sejam iguais\"\n      });\n    } else if (newPassword.length < 4) {\n      this.setState({ confirmPassword: \"\" });\n      return Swal.fire({\n        type: \"error\",\n        title: \"Senha deve ter pelo menos 4 caracteres\",\n        text: \"Tente novamente\"\n      });\n    } else {\n      Axios.put(\n        `https://${PathName}/pet/api/Usuarios/change-password/${userId}`,\n        {\n          currentPassword: this.state.currentPassword,\n          newPassword: this.state.newPassword\n        },\n        {\n          headers: {\n            Authorization: localStorage.getItem(\"access_token\")\n          }\n        }\n      )\n        .then(async res => {\n          localStorage.clear();\n          this.setState({ redirect: true });\n          return Swal.fire({\n            type: \"success\",\n            title: \"Senha alterada com sucesso!\",\n            text: \"Por favor, logue-se de novo para completar a troca da senha\"\n          });\n        })\n        .catch(err => {\n          return Swal.fire({\n            type: \"error\",\n            title: \"Ops! algo deu errado\",\n            text: err.response.data.error.message\n          });\n        });\n    }\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/pet/login\" />;\n    }\n    return (\n      <Fragment>\n        <Header />\n\n        <div className=\"container\">\n          <div className=\"card-panel\">\n            <div className=\"row\">\n              <form onSubmit={this.handlePassChange}>\n                <h5 className=\"indigo-text center\">Alterar senha</h5>\n\n                <div>\n                  <TextInput\n                    s={12}\n                    password\n                    validate\n                    label=\"Senha atual\"\n                    name=\"currentPassword\"\n                    error=\"Insira a senha atual\"\n                    success=\"\"\n                    required\n                    onChange={e => {\n                      this.handleChange(e);\n                    }}\n                  />\n                  <TextInput\n                    s={12}\n                    password\n                    validate\n                    label=\"Senha nova\"\n                    name=\"newPassword\"\n                    error=\"Insira a nova senha\"\n                    success=\"\"\n                    required\n                    onChange={e => {\n                      this.handleChange(e);\n                    }}\n                  />\n                  <TextInput\n                    s={12}\n                    password\n                    validate\n                    label=\"Confirme nova senha\"\n                    name=\"confirmNewPassword\"\n                    error=\"Confirme a nova senha\"\n                    success=\"\"\n                    required\n                    onChange={e => {\n                      this.handleChange(e);\n                    }}\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  name=\"btn_senha\"\n                  className=\"btn blue waves-effect waves-light lighten-1 right\"\n                >\n                  Alterar senha\n                </button>\n                <Link\n                  to=\"/pet/perfil\"\n                  className=\"btn waves-effect waves-light blue lighten-1 left\"\n                >\n                  Voltar\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default TrocaSenha;\n"]},"metadata":{},"sourceType":"module"}