{"ast":null,"code":"import _objectWithoutProperties from \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Evento/addDadoAdicional.js\";\nimport { connect } from 'react-redux';\nimport { change, submit, isSubmitting } from 'redux-form';\nimport React, { Component, Fragment } from 'react';\nimport { required, BooleanInput, Button, SaveButton, CREATE, SimpleForm, SelectInput, TextInput, withDataProvider, FormDataConsumer } from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/Add';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nclass PostQuickCreateButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false,\n      showDialog: false\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        showDialog: true\n      });\n    };\n\n    this.handleCloseClick = () => {\n      this.setState({\n        showDialog: false\n      });\n    };\n\n    this.handleSaveClick = () => {\n      const submit = this.props.submit; // Trigger a submit of our custom quick create form\n      // This is needed because our modal action buttons are oustide the form\n\n      submit('post-quick-create');\n    };\n\n    this.handleSubmit = values => {\n      const dataProvider = this.props.dataProvider;\n      dataProvider(CREATE, 'DadosAdicionais', {\n        pagination: {\n          page: 1,\n          perPage: 0\n        },\n        sort: {\n          field: 'id',\n          order: 'DESC'\n        },\n        data: {\n          eventoId: this.props.eventId,\n          nome: values.nome,\n          descricao: values.descricao,\n          selectChoice: values.selectChoice ? values.selectChoice : null,\n          respIsBoolean: values.respIsBoolean\n        }\n      }, {\n        onSuccess: {\n          refresh: true\n        },\n        onError: {\n          notification: {\n            body: 'Error: algo deu errado!',\n            level: 'warning'\n          }\n        }\n      });\n      this.setState({\n        showDialog: false\n      });\n    };\n  }\n\n  render() {\n    const showDialog = this.state.showDialog;\n    const isSubmitting = this.props.isSubmitting;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClick,\n      label: \"Dado adicional    \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(IconContentAdd, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      fullWidth: true,\n      open: showDialog,\n      onClose: this.handleCloseClick,\n      \"aria-label\": \"Criar item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Criar dado adicional\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(SimpleForm // We override the redux-form name to avoid collision with the react-admin main form\n    , {\n      form: \"post-quick-create\",\n      resource: \"DadosAdicionais\" // We override the redux-form onSubmit prop to handle the submission ourselves\n      ,\n      onSubmit: this.handleSubmit // We want no toolbar at all as we have our modal actions\n      ,\n      toolbar: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      source: \"nome\",\n      validate: required(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      source: \"descricao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(BooleanInput, {\n      default: false,\n      label: \"Cont\\xE9m op\\xE7\\xF5es?\",\n      source: \"respIsBoolean\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(FormDataConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, (_ref) => {\n      let formData = _ref.formData,\n          rest = _objectWithoutProperties(_ref, [\"formData\"]);\n\n      return formData.respIsBoolean && React.createElement(SelectInput, Object.assign({\n        source: \"selectChoice\",\n        validate: required(),\n        label: \"Selecione o tipo de select\",\n        choices: [{\n          id: 'selectInput',\n          name: 'Select input'\n        }, {\n          id: 'multipleSelectInput',\n          name: 'Multiple select input '\n        }]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(SaveButton, {\n      label: \"Confirmar\",\n      saving: isSubmitting,\n      onClick: this.handleSaveClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"ra.action.cancel\",\n      onClick: this.handleCloseClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(IconCancel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nPostQuickCreateButton.propTypes = {\n  dataProvider: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  record: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting('post-quick-create')(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n  submit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withDataProvider(PostQuickCreateButton));","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Evento/addDadoAdicional.js"],"names":["connect","change","submit","isSubmitting","React","Component","Fragment","required","BooleanInput","Button","SaveButton","CREATE","SimpleForm","SelectInput","TextInput","withDataProvider","FormDataConsumer","IconContentAdd","IconCancel","Dialog","DialogTitle","PropTypes","DialogContent","DialogActions","PostQuickCreateButton","state","error","showDialog","handleClick","setState","handleCloseClick","handleSaveClick","props","handleSubmit","values","dataProvider","pagination","page","perPage","sort","field","order","data","eventoId","eventId","nome","descricao","selectChoice","respIsBoolean","onSuccess","refresh","onError","notification","body","level","render","formData","rest","id","name","propTypes","func","isRequired","dispatch","record","object","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { change, submit, isSubmitting } from 'redux-form';\nimport React, { Component, Fragment } from 'react';\nimport {\n  required,\n  BooleanInput,\n  Button,\n  SaveButton,\n  CREATE,\n  SimpleForm,\n  SelectInput,\n  TextInput,\n  withDataProvider,\n  FormDataConsumer\n} from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/Add';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nclass PostQuickCreateButton extends Component {\n  state = {\n    error: false,\n    showDialog: false\n  };\n\n  handleClick = () => {\n    this.setState({ showDialog: true });\n  };\n\n  handleCloseClick = () => {\n    this.setState({ showDialog: false });\n  };\n\n  handleSaveClick = () => {\n    const { submit } = this.props;\n\n    // Trigger a submit of our custom quick create form\n    // This is needed because our modal action buttons are oustide the form\n    submit('post-quick-create');\n  };\n\n  handleSubmit = values => {\n    const { dataProvider } = this.props;\n    dataProvider(\n      CREATE,\n      'DadosAdicionais',\n      {\n        pagination: { page: 1, perPage: 0 },\n        sort: { field: 'id', order: 'DESC' },\n        data: {\n          eventoId: this.props.eventId,\n          nome: values.nome,\n          descricao: values.descricao,\n          selectChoice: values.selectChoice ? values.selectChoice : null,\n          respIsBoolean: values.respIsBoolean\n        }\n      },\n      {\n        onSuccess: {\n          refresh: true\n        },\n        onError: {\n          notification: {\n            body: 'Error: algo deu errado!',\n            level: 'warning'\n          }\n        }\n      }\n    );\n    this.setState({ showDialog: false });\n  };\n\n  render() {\n    const { showDialog } = this.state;\n    const { isSubmitting } = this.props;\n\n    return (\n      <Fragment>\n        <Button onClick={this.handleClick} label=\"Dado adicional    \">\n          <IconContentAdd />\n        </Button>\n        <Dialog\n          fullWidth\n          open={showDialog}\n          onClose={this.handleCloseClick}\n          aria-label=\"Criar item\"\n        >\n          <DialogTitle>Criar dado adicional</DialogTitle>\n          <DialogContent>\n            <SimpleForm\n              // We override the redux-form name to avoid collision with the react-admin main form\n              form=\"post-quick-create\"\n              resource=\"DadosAdicionais\"\n              // We override the redux-form onSubmit prop to handle the submission ourselves\n              onSubmit={this.handleSubmit}\n              // We want no toolbar at all as we have our modal actions\n              toolbar={null}\n            >\n              <TextInput source=\"nome\" validate={required()} />\n              <TextInput source=\"descricao\" />\n              <BooleanInput\n                default={false}\n                label=\"Contém opções?\"\n                source=\"respIsBoolean\"\n              />\n              <FormDataConsumer>\n                {({ formData, ...rest }) =>\n                  formData.respIsBoolean && (\n                    <SelectInput\n                      source=\"selectChoice\"\n                      validate={required()}\n                      label=\"Selecione o tipo de select\"\n                      choices={[\n                        { id: 'selectInput', name: 'Select input' },\n                        {\n                          id: 'multipleSelectInput',\n                          name: 'Multiple select input '\n                        }\n                      ]}\n                      {...rest}\n                    />\n                  )\n                }\n              </FormDataConsumer>\n            </SimpleForm>\n          </DialogContent>\n          <DialogActions>\n            <SaveButton\n              label=\"Confirmar\"\n              saving={isSubmitting}\n              onClick={this.handleSaveClick}\n            />\n            <Button label=\"ra.action.cancel\" onClick={this.handleCloseClick}>\n              <IconCancel />\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nPostQuickCreateButton.propTypes = {\n  dataProvider: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  record: PropTypes.object\n};\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting('post-quick-create')(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n\n  submit\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withDataProvider(PostQuickCreateButton));\n"]},"metadata":{},"sourceType":"module"}