{"ast":null,"code":"var _jsxFileName = \"/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/DadoAdicional/addOpcao.js\";\nimport { connect } from 'react-redux';\nimport { change, submit, isSubmitting } from 'redux-form';\nimport React, { Component, Fragment } from 'react';\nimport { required, Button, SaveButton, CREATE, SimpleForm, TextInput, withDataProvider } from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/Add';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nclass PostQuickCreateButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false,\n      showDialog: false\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        showDialog: true\n      });\n    };\n\n    this.handleCloseClick = () => {\n      this.setState({\n        showDialog: false\n      });\n    };\n\n    this.handleSaveClick = () => {\n      const submit = this.props.submit; // Trigger a submit of our custom quick create form\n      // This is needed because our modal action buttons are oustide the form\n\n      submit('post-quick-create');\n    };\n\n    this.handleSubmit = values => {\n      const dataProvider = this.props.dataProvider;\n      dataProvider(CREATE, 'Opcoes', {\n        pagination: {\n          page: 1,\n          perPage: 0\n        },\n        sort: {\n          field: 'id',\n          order: 'DESC'\n        },\n        data: {\n          dadoAdicionalId: this.props.dadoAdicionalId,\n          valor: values.valor\n        }\n      }, {\n        onSuccess: {\n          refresh: true\n        },\n        onError: {\n          notification: {\n            body: 'Error: algo deu errado!',\n            level: 'warning'\n          }\n        }\n      });\n      this.setState({\n        showDialog: false\n      });\n    };\n  }\n\n  render() {\n    const showDialog = this.state.showDialog;\n    const isSubmitting = this.props.isSubmitting;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClick,\n      label: \"Op\\xE7\\xE3o\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(IconContentAdd, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      fullWidth: true,\n      open: showDialog,\n      onClose: this.handleCloseClick,\n      \"aria-label\": \"Criar item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Op\\xE7\\xE3o dado adicional/add\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(SimpleForm // We override the redux-form name to avoid collision with the react-admin main form\n    , {\n      form: \"post-quick-create\",\n      resource: \"opcoes\" // We override the redux-form onSubmit prop to handle the submission ourselves\n      ,\n      onSubmit: this.handleSubmit // We want no toolbar at all as we have our modal actions\n      ,\n      toolbar: null,\n      submitOnEnter: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      validate: required(),\n      source: \"valor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(SaveButton, {\n      label: \"Criar op\\xE7\\xE3o\",\n      saving: isSubmitting,\n      onClick: this.handleSaveClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"ra.action.cancel\",\n      onClick: this.handleCloseClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(IconCancel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nPostQuickCreateButton.propTypes = {\n  dataProvider: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  record: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting('post-quick-create')(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n  submit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withDataProvider(PostQuickCreateButton));","map":{"version":3,"sources":["/home/arthur/UEM/front-ProjetosUEM/src/Components/Admin/DadoAdicional/addOpcao.js"],"names":["connect","change","submit","isSubmitting","React","Component","Fragment","required","Button","SaveButton","CREATE","SimpleForm","TextInput","withDataProvider","IconContentAdd","IconCancel","Dialog","DialogTitle","PropTypes","DialogContent","DialogActions","PostQuickCreateButton","state","error","showDialog","handleClick","setState","handleCloseClick","handleSaveClick","props","handleSubmit","values","dataProvider","pagination","page","perPage","sort","field","order","data","dadoAdicionalId","valor","onSuccess","refresh","onError","notification","body","level","render","propTypes","func","isRequired","dispatch","record","object","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { change, submit, isSubmitting } from 'redux-form';\nimport React, { Component, Fragment } from 'react';\nimport {\n  required,\n  Button,\n  SaveButton,\n  CREATE,\n  SimpleForm,\n  TextInput,\n  withDataProvider\n} from 'react-admin';\nimport IconContentAdd from '@material-ui/icons/Add';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nclass PostQuickCreateButton extends Component {\n  state = {\n    error: false,\n    showDialog: false\n  };\n\n  handleClick = () => {\n    this.setState({ showDialog: true });\n  };\n\n  handleCloseClick = () => {\n    this.setState({ showDialog: false });\n  };\n\n  handleSaveClick = () => {\n    const { submit } = this.props;\n\n    // Trigger a submit of our custom quick create form\n    // This is needed because our modal action buttons are oustide the form\n    submit('post-quick-create');\n  };\n\n  handleSubmit = values => {\n    const { dataProvider } = this.props;\n    dataProvider(\n      CREATE,\n      'Opcoes',\n      {\n        pagination: { page: 1, perPage: 0 },\n        sort: { field: 'id', order: 'DESC' },\n        data: {\n          dadoAdicionalId: this.props.dadoAdicionalId,\n          valor: values.valor\n        }\n      },\n      {\n        onSuccess: {\n          refresh: true\n        },\n        onError: {\n          notification: {\n            body: 'Error: algo deu errado!',\n            level: 'warning'\n          }\n        }\n      }\n    );\n    this.setState({ showDialog: false });\n  };\n\n  render() {\n    const { showDialog } = this.state;\n    const { isSubmitting } = this.props;\n\n    return (\n      <Fragment>\n        <Button onClick={this.handleClick} label=\"Opção\">\n          <IconContentAdd />\n        </Button>\n        <Dialog\n          fullWidth\n          open={showDialog}\n          onClose={this.handleCloseClick}\n          aria-label=\"Criar item\"\n        >\n          <DialogTitle>Opção dado adicional/add</DialogTitle>\n          <DialogContent>\n            <SimpleForm\n              // We override the redux-form name to avoid collision with the react-admin main form\n              form=\"post-quick-create\"\n              resource=\"opcoes\"\n              // We override the redux-form onSubmit prop to handle the submission ourselves\n              onSubmit={this.handleSubmit}\n              // We want no toolbar at all as we have our modal actions\n              toolbar={null}\n              submitOnEnter={false}\n            >\n              <TextInput validate={required()} source=\"valor\" />\n            </SimpleForm>\n          </DialogContent>\n          <DialogActions>\n            <SaveButton\n              label=\"Criar opção\"\n              saving={isSubmitting}\n              onClick={this.handleSaveClick}\n            />\n            <Button label=\"ra.action.cancel\" onClick={this.handleCloseClick}>\n              <IconCancel />\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nPostQuickCreateButton.propTypes = {\n  dataProvider: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  record: PropTypes.object\n};\nconst mapStateToProps = state => ({\n  isSubmitting: isSubmitting('post-quick-create')(state)\n});\n\nconst mapDispatchToProps = {\n  change,\n\n  submit\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withDataProvider(PostQuickCreateButton));\n"]},"metadata":{},"sourceType":"module"}