{"ast":null,"code":"import _objectWithoutProperties from \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Inscrito/Inscritos.js\";\nimport React from 'react';\nimport { ShowButton, ExportButton, ReferenceField, List, GET_MANY_REFERENCE, downloadCSV, CardActions, BooleanField, Datagrid, TextField } from 'react-admin';\nimport DeleteButtonWithConfirmation from '../deleteButtonWithConfirmation';\nimport dataProvider from '../dataProvider';\nimport { unparse as convertToCSV } from 'papaparse/papaparse.min';\nimport Pagamento from '../statusPagamentoButton';\n\nconst exporter = async (records, fetchRelatedRecords) => {\n  var userInfo = await [];\n  let activityNames = [];\n  let count = 0;\n  const usuarios = await fetchRelatedRecords(records, 'usuarioId', 'Usuarios').then(async recordsUsuarios => {\n    return recordsUsuarios;\n  });\n  await records.map(async element => {\n    let info = {};\n    let atividadesECargaHorarias = await dataProvider(GET_MANY_REFERENCE, 'Inscricoes', {\n      target: 'inscritoId',\n      pagination: {\n        page: 1,\n        perPage: 0\n      },\n      sort: {\n        field: 'id',\n        order: 'DESC'\n      },\n      id: element.id\n    }).then(async response => {\n      let atividadesECargaHorarias = await fetchRelatedRecords(response.data, 'atividadeId', 'Atividades').then(async recordsAtividades => {\n        return await response.data.map(record => [[recordsAtividades[record.atividadeId].nome], //nome da atividade\n        record.cargaHoraria //carga horaria que o usuario teve na atividade\n        ]);\n      });\n      return await atividadesECargaHorarias;\n    });\n    info['nome'] = await usuarios[element.usuarioId].nome; // nome do usuario\n\n    info['email'] = await usuarios[element.usuarioId].email; // email do usuario\n\n    info['cpf'] = await usuarios[element.usuarioId].cpf; // cpf do usuario\n\n    info['cargaHorariaTotal'] = await element.cargaHoraria; // carga hoaria total do evento\n\n    userInfo.push(info);\n    atividadesECargaHorarias.forEach(activity => {\n      info[activity[0]] = activity[1]; // cria uma chave com o nome da atividade e a carga horaria recebida\n\n      if (!activityNames.includes(activity[0])) {\n        activityNames.push(activity[0]); // insere o nome da atividade\n      }\n    });\n    count = count + 1;\n\n    if (count === records.length) {\n      const csv = convertToCSV({\n        data: userInfo,\n        fields: ['nome', 'email', 'cpf', 'cargaHorariaTotal'].concat(activityNames)\n      });\n      downloadCSV(csv, 'Usuarios');\n    }\n  }); // console.log(userInfo);\n  //     const csv = convertToCSV({\n  //       data: userInfo,\n  //       fields: [\"nome\", \"email\", \"cpf\", \"cargaHoraria\"]\n  //     });\n  //     console.log(csv);\n  //     downloadCSV(csv, \"Usuarios\");\n  //nao da certo colocar aqui e pq eh async\n};\n\nconst PostActions = ({\n  currentSort,\n  eventId,\n  resource\n}) => React.createElement(CardActions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, React.createElement(ExportButton, {\n  resource: resource,\n  sort: currentSort,\n  filter: {\n    eventoId: eventId\n  },\n  exporter: exporter,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}));\n\nexport const AjudanteList = (_ref) => {\n  let permissions = _ref.permissions,\n      props = _objectWithoutProperties(_ref, [\"permissions\"]);\n\n  return React.createElement(List, Object.assign({\n    title: \"Participantes\",\n    filter: {\n      eventoId: props.location.hash.substring(12)\n    },\n    bulkActionButtons: false,\n    actions: React.createElement(PostActions, Object.assign({\n      eventId: props.location.hash.substring(10)\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Datagrid, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), console.log(props), React.createElement(ReferenceField, {\n    linkType: false,\n    label: \"Nome\",\n    reference: \"Usuarios\",\n    source: \"usuarioId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    source: \"nome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(ReferenceField, {\n    linkType: false,\n    label: \"CPF\",\n    reference: \"Usuarios\",\n    source: \"usuarioId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    source: \"cpf\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(ReferenceField, {\n    label: \"E-mail\",\n    linkType: false,\n    reference: \"Usuarios\",\n    source: \"usuarioId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    source: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(BooleanField, {\n    label: \"Pagamento\",\n    source: \"pago\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Carga hor\\xE1ria total\",\n    source: \"cargaHoraria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), (permissions === 'Petiano' || permissions === 'admin') && React.createElement(Pagamento, {\n    redirect: false,\n    label: \"Status pagamento\",\n    undoable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(ShowButton, {\n    label: \"Visualizar atividades\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), permissions === 'admin' && React.createElement(DeleteButtonWithConfirmation, {\n    redirect: false,\n    label: \"Remover inscrito\",\n    undoable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })));\n};\nexport default AjudanteList;","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Inscrito/Inscritos.js"],"names":["React","ShowButton","ExportButton","ReferenceField","List","GET_MANY_REFERENCE","downloadCSV","CardActions","BooleanField","Datagrid","TextField","DeleteButtonWithConfirmation","dataProvider","unparse","convertToCSV","Pagamento","exporter","records","fetchRelatedRecords","userInfo","activityNames","count","usuarios","then","recordsUsuarios","map","element","info","atividadesECargaHorarias","target","pagination","page","perPage","sort","field","order","id","response","data","recordsAtividades","record","atividadeId","nome","cargaHoraria","usuarioId","email","cpf","push","forEach","activity","includes","length","csv","fields","concat","PostActions","currentSort","eventId","resource","eventoId","AjudanteList","permissions","props","location","hash","substring","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {\n  ShowButton,\n  ExportButton,\n  ReferenceField,\n  List,\n  GET_MANY_REFERENCE,\n  downloadCSV,\n  CardActions,\n  BooleanField,\n  Datagrid,\n  TextField\n} from 'react-admin';\n\nimport DeleteButtonWithConfirmation from '../deleteButtonWithConfirmation';\nimport dataProvider from '../dataProvider';\nimport { unparse as convertToCSV } from 'papaparse/papaparse.min';\nimport Pagamento from '../statusPagamentoButton';\nconst exporter = async (records, fetchRelatedRecords) => {\n  var userInfo = await [];\n  let activityNames = [];\n  let count = 0;\n  const usuarios = await fetchRelatedRecords(\n    records,\n    'usuarioId',\n    'Usuarios'\n  ).then(async recordsUsuarios => {\n    return recordsUsuarios;\n  });\n  await records.map(async element => {\n    let info = {};\n    let atividadesECargaHorarias = await dataProvider(\n      GET_MANY_REFERENCE,\n      'Inscricoes',\n      {\n        target: 'inscritoId',\n        pagination: { page: 1, perPage: 0 },\n        sort: { field: 'id', order: 'DESC' },\n        id: element.id\n      }\n    ).then(async response => {\n      let atividadesECargaHorarias = await fetchRelatedRecords(\n        response.data,\n        'atividadeId',\n        'Atividades'\n      ).then(async recordsAtividades => {\n        return await response.data.map(record => [\n          [recordsAtividades[record.atividadeId].nome], //nome da atividade\n          record.cargaHoraria //carga horaria que o usuario teve na atividade\n        ]);\n      });\n      return await atividadesECargaHorarias;\n    });\n\n    info['nome'] = await usuarios[element.usuarioId].nome; // nome do usuario\n    info['email'] = await usuarios[element.usuarioId].email; // email do usuario\n    info['cpf'] = await usuarios[element.usuarioId].cpf; // cpf do usuario\n    info['cargaHorariaTotal'] = await element.cargaHoraria; // carga hoaria total do evento\n    userInfo.push(info);\n\n    atividadesECargaHorarias.forEach(activity => {\n      info[activity[0]] = activity[1]; // cria uma chave com o nome da atividade e a carga horaria recebida\n      if (!activityNames.includes(activity[0])) {\n        activityNames.push(activity[0]); // insere o nome da atividade\n      }\n    });\n    count = count + 1;\n    if (count === records.length) {\n      const csv = convertToCSV({\n        data: userInfo,\n        fields: ['nome', 'email', 'cpf', 'cargaHorariaTotal'].concat(\n          activityNames\n        )\n      });\n\n      downloadCSV(csv, 'Usuarios');\n    }\n  });\n  // console.log(userInfo);\n  //     const csv = convertToCSV({\n  //       data: userInfo,\n  //       fields: [\"nome\", \"email\", \"cpf\", \"cargaHoraria\"]\n  //     });\n  //     console.log(csv);\n  //     downloadCSV(csv, \"Usuarios\");\n  //nao da certo colocar aqui e pq eh async\n};\n\nconst PostActions = ({ currentSort, eventId, resource }) => (\n  <CardActions>\n    <ExportButton\n      resource={resource}\n      sort={currentSort}\n      filter={{ eventoId: eventId }}\n      exporter={exporter}\n    />\n  </CardActions>\n);\n\nexport const AjudanteList = ({ permissions, ...props }) => (\n  <List\n    title=\"Participantes\"\n    filter={{ eventoId: props.location.hash.substring(12) }}\n    bulkActionButtons={false}\n    actions={\n      <PostActions {...{ eventId: props.location.hash.substring(10) }} />\n    }\n    {...props}\n  >\n    <Datagrid {...props}>\n      {console.log(props)}\n      <ReferenceField\n        linkType={false}\n        label=\"Nome\"\n        reference=\"Usuarios\"\n        source=\"usuarioId\"\n      >\n        <TextField source=\"nome\" />\n      </ReferenceField>\n      <ReferenceField\n        linkType={false}\n        label=\"CPF\"\n        reference=\"Usuarios\"\n        source=\"usuarioId\"\n      >\n        <TextField source=\"cpf\" />\n      </ReferenceField>\n      <ReferenceField\n        label=\"E-mail\"\n        linkType={false}\n        reference=\"Usuarios\"\n        source=\"usuarioId\"\n      >\n        <TextField source=\"email\" />\n      </ReferenceField>\n      <BooleanField label=\"Pagamento\" source=\"pago\" />\n      <TextField label=\"Carga horária total\" source=\"cargaHoraria\" />\n      {(permissions === 'Petiano' || permissions === 'admin') && (\n        <Pagamento redirect={false} label=\"Status pagamento\" undoable={true} />\n      )}\n      <ShowButton label=\"Visualizar atividades\" />\n      {permissions === 'admin' && (\n        <DeleteButtonWithConfirmation\n          redirect={false}\n          label=\"Remover inscrito\"\n          undoable={true}\n        />\n      )}\n    </Datagrid>\n  </List>\n);\n\nexport default AjudanteList;\n"]},"metadata":{},"sourceType":"module"}