{"ast":null,"code":"import _objectSpread from \"/home/arthur/UEM/front-ProjetosUEM/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/arthur/UEM/front-ProjetosUEM/src/Components/Eventos/DadosAdiconais/dadosAdicionais.js\";\nimport React, { Component, Fragment } from \"react\";\nimport CategoriaDadoAdicional from \"./categoriaDadoAdicional\";\nimport ConfirmacaoInscrito from \"./confirmacaoInscrito\";\nimport Header from \"../../Header/Header\";\nimport Axios from \"axios\";\nimport PathName from \"../../pathConst\";\nimport { Link } from \"react-router-dom\";\nexport default class cadastroEvento extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dadosAdicionais: [],\n      opcoes: [],\n      opcoesSelecionadas: [],\n      opcaoSelecionada: [],\n      respostas: [],\n      respostaTexto: [],\n      hasDadoAdicional: false,\n      redirectToConfirm: false\n    };\n\n    this.handleChangeOption = idDadoAdicional => e => {\n      this.setState({\n        opcoesSelecionadas: this.state.opcoesSelecionadas.map(o => o.dadoAdicionalId === idDadoAdicional ? _objectSpread({}, o, {\n          idOpcoes: [...e.target.options].filter(o => o.selected).map(o => o.value)\n        }) : o)\n      });\n    };\n\n    this.handleChangeSingleOption = idDadoAdicional => e => {\n      this.setState({\n        opcaoSelecionada: this.state.opcaoSelecionada.map(o => o.dadoAdicionalId === idDadoAdicional ? _objectSpread({}, o, {\n          idOpcao: [...e.target.options].filter(o => o.selected).map(o => o.value)\n        }) : o)\n      });\n    };\n\n    this.handleChangeText = idDadoAdicional => e => {\n      this.setState({\n        respostaTexto: this.state.respostaTexto.map(r => r.dadoAdicionalId === idDadoAdicional ? _objectSpread({}, r, {\n          texto: e.target.value\n        }) : r)\n      });\n    };\n\n    this.mountRespostasMultipleSelect = () => {\n      const opcoesSelecionadas = this.state.opcoesSelecionadas;\n      opcoesSelecionadas.forEach(opcao => {\n        opcao.idOpcoes.forEach(idOpcao => {\n          const resposta = {\n            booleanResp: true,\n            textResp: \"\",\n            opcaoId: idOpcao,\n            dadoAdicionalId: opcao.dadoAdicionalId,\n            inscritoId: null\n          };\n          this.setState(prevState => ({\n            respostas: [...prevState.respostas, resposta]\n          }));\n        });\n      });\n    };\n\n    this.mountRespostasSingleSelect = () => {\n      const opcaoSelecionada = this.state.opcaoSelecionada;\n      opcaoSelecionada.forEach(opcao => {\n        if (opcao.idOpcao !== \"\") {\n          const resposta = {\n            booleanResp: true,\n            textResp: \"\",\n            opcaoId: opcao.idOpcao,\n            dadoAdicionalId: opcao.dadoAdicionalId,\n            inscritoId: null\n          };\n          this.setState(prevState => ({\n            respostas: [...prevState.respostas, resposta]\n          }));\n        }\n      });\n    };\n\n    this.mountRespostasText = () => {\n      const respostaTexto = this.state.respostaTexto;\n      respostaTexto.forEach(respText => {\n        if (respText !== \"\") {\n          const resposta = {\n            booleanResp: false,\n            textResp: respText.texto,\n            opcaoId: null,\n            dadoAdicionalId: respText.dadoAdicionalId,\n            inscritoId: null\n          };\n          this.setState(prevState => ({\n            respostas: [...prevState.respostas, resposta]\n          }));\n        }\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.mountRespostasMultipleSelect();\n      this.mountRespostasSingleSelect();\n      this.mountRespostasText();\n      this.setState({\n        redirectToConfirm: true\n      });\n    };\n  }\n\n  componentWillMount() {\n    const idEvento = this.props.idEvento;\n    const token = localStorage.getItem(\"access_token\");\n    const eventoFilter = {\n      where: {\n        eventoId: idEvento\n      }\n    };\n    const filterHasDadoAdicional = {\n      fields: {\n        hasDadoAdicional: true,\n        id: true\n      }\n    };\n    const Token = {\n      headers: {\n        Authorization: token\n      }\n    };\n    Axios.all([Axios.get(\"\".concat(PathName, \"/pet/api/DadosAdicionais/?filter=\").concat(JSON.stringify(eventoFilter)), Token), Axios.get(\"\".concat(PathName, \"/pet/api/Eventos/\").concat(idEvento, \"?filter=\").concat(JSON.stringify(filterHasDadoAdicional)))]).then(Axios.spread((dadosAdicionaisRes, eventoRes) => {\n      this.setState({\n        dadosAdicionais: dadosAdicionaisRes.data,\n        opcoesSelecionadas: dadosAdicionaisRes.data.map(dadoAdicional => ({\n          dadoAdicionalId: dadoAdicional.id,\n          idOpcoes: []\n        })),\n        opcaoSelecionada: dadosAdicionaisRes.data.map(dadoAdicional => ({\n          dadoAdicionalId: dadoAdicional.id,\n          idOpcao: \"\"\n        })),\n        respostaTexto: dadosAdicionaisRes.data.map(dadoAdicional => ({\n          dadoAdicionalId: dadoAdicional.id,\n          opcaoId: null,\n          texto: \"\"\n        })),\n        hasDadoAdicional: eventoRes.data.hasDadoAdicional\n      });\n    }));\n  }\n\n  render() {\n    const idEvento = this.props.idEvento;\n    const _this$state = this.state,\n          dadosAdicionais = _this$state.dadosAdicionais,\n          opcoesSelecionadas = _this$state.opcoesSelecionadas,\n          opcaoSelecionada = _this$state.opcaoSelecionada,\n          respostaTexto = _this$state.respostaTexto,\n          redirectToConfirm = _this$state.redirectToConfirm,\n          respostas = _this$state.respostas,\n          hasDadoAdicional = _this$state.hasDadoAdicional;\n\n    if (redirectToConfirm || !hasDadoAdicional) {\n      return React.createElement(ConfirmacaoInscrito, {\n        respostas: respostas,\n        idEvento: idEvento,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-panel z-depth-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Dados Adicionais\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, dadosAdicionais.map(dadoAdicional => React.createElement(CategoriaDadoAdicional, {\n        dadoAdicional: dadoAdicional,\n        key: dadoAdicional.id,\n        opcoesSelecionadas: opcoesSelecionadas,\n        opcaoSelecionada: opcaoSelecionada,\n        respostaTexto: respostaTexto,\n        handleChangeOption: this.handleChangeOption(dadoAdicional.id),\n        handleChangeText: this.handleChangeText(dadoAdicional.id),\n        handleChangeSingleOption: this.handleChangeSingleOption(dadoAdicional.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn blue lighten-1 right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Continuar inscrição\"), React.createElement(Link, {\n        className: \"btn blue lighten-1 left\",\n        to: \"/pet/eventos/\".concat(idEvento),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Voltar\")))))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/arthur/UEM/front-ProjetosUEM/src/Components/Eventos/DadosAdiconais/dadosAdicionais.js"],"names":["React","Component","Fragment","CategoriaDadoAdicional","ConfirmacaoInscrito","Header","Axios","PathName","Link","cadastroEvento","state","dadosAdicionais","opcoes","opcoesSelecionadas","opcaoSelecionada","respostas","respostaTexto","hasDadoAdicional","redirectToConfirm","handleChangeOption","idDadoAdicional","e","setState","map","o","dadoAdicionalId","idOpcoes","target","options","filter","selected","value","handleChangeSingleOption","idOpcao","handleChangeText","r","texto","mountRespostasMultipleSelect","forEach","opcao","resposta","booleanResp","textResp","opcaoId","inscritoId","prevState","mountRespostasSingleSelect","mountRespostasText","respText","handleSubmit","preventDefault","componentWillMount","idEvento","props","token","localStorage","getItem","eventoFilter","where","eventoId","filterHasDadoAdicional","fields","id","Token","headers","Authorization","all","get","JSON","stringify","then","spread","dadosAdicionaisRes","eventoRes","data","dadoAdicional","render","textAlign"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport CategoriaDadoAdicional from \"./categoriaDadoAdicional\";\nimport ConfirmacaoInscrito from \"./confirmacaoInscrito\";\nimport Header from \"../../Header/Header\";\nimport Axios from \"axios\";\nimport PathName from \"../../pathConst\";\nimport { Link } from \"react-router-dom\";\n\nexport default class cadastroEvento extends Component {\n  componentWillMount() {\n    const { idEvento } = this.props;\n    const token = localStorage.getItem(\"access_token\");\n    const eventoFilter = {\n      where: {\n        eventoId: idEvento\n      }\n    };\n    const filterHasDadoAdicional = {\n      fields: {\n        hasDadoAdicional: true,\n        id: true\n      }\n    };\n    const Token = {\n      headers: {\n        Authorization: token\n      }\n    };\n\n    Axios.all([\n      Axios.get(\n        `${PathName}/pet/api/DadosAdicionais/?filter=${JSON.stringify(\n          eventoFilter\n        )}`,\n        Token\n      ),\n      Axios.get(\n        `${PathName}/pet/api/Eventos/${idEvento}?filter=${JSON.stringify(\n          filterHasDadoAdicional\n        )}`\n      )\n    ]).then(\n      Axios.spread((dadosAdicionaisRes, eventoRes) => {\n        this.setState({\n          dadosAdicionais: dadosAdicionaisRes.data,\n          opcoesSelecionadas: dadosAdicionaisRes.data.map(dadoAdicional => ({\n            dadoAdicionalId: dadoAdicional.id,\n            idOpcoes: []\n          })),\n          opcaoSelecionada: dadosAdicionaisRes.data.map(dadoAdicional => ({\n            dadoAdicionalId: dadoAdicional.id,\n            idOpcao: \"\"\n          })),\n          respostaTexto: dadosAdicionaisRes.data.map(dadoAdicional => ({\n            dadoAdicionalId: dadoAdicional.id,\n            opcaoId: null,\n            texto: \"\"\n          })),\n          hasDadoAdicional: eventoRes.data.hasDadoAdicional\n        });\n      })\n    );\n  }\n\n  state = {\n    dadosAdicionais: [],\n    opcoes: [],\n    opcoesSelecionadas: [],\n    opcaoSelecionada: [],\n    respostas: [],\n    respostaTexto: [],\n    hasDadoAdicional: false,\n    redirectToConfirm: false\n  };\n\n  handleChangeOption = idDadoAdicional => e => {\n    this.setState({\n      opcoesSelecionadas: this.state.opcoesSelecionadas.map(o =>\n        o.dadoAdicionalId === idDadoAdicional\n          ? {\n              ...o,\n              idOpcoes: [...e.target.options]\n                .filter(o => o.selected)\n                .map(o => o.value)\n            }\n          : o\n      )\n    });\n  };\n\n  handleChangeSingleOption = idDadoAdicional => e => {\n    this.setState({\n      opcaoSelecionada: this.state.opcaoSelecionada.map(o =>\n        o.dadoAdicionalId === idDadoAdicional\n          ? {\n              ...o,\n              idOpcao: [...e.target.options]\n                .filter(o => o.selected)\n                .map(o => o.value)\n            }\n          : o\n      )\n    });\n  };\n\n  handleChangeText = idDadoAdicional => e => {\n    this.setState({\n      respostaTexto: this.state.respostaTexto.map(r =>\n        r.dadoAdicionalId === idDadoAdicional\n          ? { ...r, texto: e.target.value }\n          : r\n      )\n    });\n  };\n\n  mountRespostasMultipleSelect = () => {\n    const { opcoesSelecionadas } = this.state;\n    opcoesSelecionadas.forEach(opcao => {\n      opcao.idOpcoes.forEach(idOpcao => {\n        const resposta = {\n          booleanResp: true,\n          textResp: \"\",\n          opcaoId: idOpcao,\n          dadoAdicionalId: opcao.dadoAdicionalId,\n          inscritoId: null\n        };\n        this.setState(prevState => ({\n          respostas: [...prevState.respostas, resposta]\n        }));\n      });\n    });\n  };\n\n  mountRespostasSingleSelect = () => {\n    const { opcaoSelecionada } = this.state;\n    opcaoSelecionada.forEach(opcao => {\n      if (opcao.idOpcao !== \"\") {\n        const resposta = {\n          booleanResp: true,\n          textResp: \"\",\n          opcaoId: opcao.idOpcao,\n          dadoAdicionalId: opcao.dadoAdicionalId,\n          inscritoId: null\n        };\n        this.setState(prevState => ({\n          respostas: [...prevState.respostas, resposta]\n        }));\n      }\n    });\n  };\n\n  mountRespostasText = () => {\n    const { respostaTexto } = this.state;\n    respostaTexto.forEach(respText => {\n      if (respText !== \"\") {\n        const resposta = {\n          booleanResp: false,\n          textResp: respText.texto,\n          opcaoId: null,\n          dadoAdicionalId: respText.dadoAdicionalId,\n          inscritoId: null\n        };\n        this.setState(prevState => ({\n          respostas: [...prevState.respostas, resposta]\n        }));\n      }\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.mountRespostasMultipleSelect();\n    this.mountRespostasSingleSelect();\n    this.mountRespostasText();\n    this.setState({ redirectToConfirm: true });\n  };\n\n  render() {\n    const { idEvento } = this.props;\n    const {\n      dadosAdicionais,\n      opcoesSelecionadas,\n      opcaoSelecionada,\n      respostaTexto,\n      redirectToConfirm,\n      respostas,\n      hasDadoAdicional\n    } = this.state;\n    if (redirectToConfirm || !hasDadoAdicional) {\n      return <ConfirmacaoInscrito respostas={respostas} idEvento={idEvento} />;\n    } else {\n      return (\n        <Fragment>\n          <Header />\n          <div className=\"container\">\n            <div className=\"card-panel z-depth-2\">\n              <div className=\"row\">\n                <h3 style={{ textAlign: \"center\" }}>{\"Dados Adicionais\"}</h3>\n                <div className=\"container\">\n                  <form onSubmit={this.handleSubmit}>\n                    {dadosAdicionais.map(dadoAdicional => (\n                      <CategoriaDadoAdicional\n                        dadoAdicional={dadoAdicional}\n                        key={dadoAdicional.id}\n                        opcoesSelecionadas={opcoesSelecionadas}\n                        opcaoSelecionada={opcaoSelecionada}\n                        respostaTexto={respostaTexto}\n                        handleChangeOption={this.handleChangeOption(\n                          dadoAdicional.id\n                        )}\n                        handleChangeText={this.handleChangeText(\n                          dadoAdicional.id\n                        )}\n                        handleChangeSingleOption={this.handleChangeSingleOption(\n                          dadoAdicional.id\n                        )}\n                      />\n                    ))}\n\n                    <button type=\"submit\" className=\"btn blue lighten-1 right\">\n                      {\"Continuar inscrição\"}\n                    </button>\n                    <Link\n                      className=\"btn blue lighten-1 left\"\n                      to={`/pet/eventos/${idEvento}`}\n                    >\n                      {\"Voltar\"}\n                    </Link>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}