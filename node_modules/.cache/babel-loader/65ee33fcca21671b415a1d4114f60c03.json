{"ast":null,"code":"import _objectWithoutProperties from \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Ajudante/CustomSaveButton.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withDataProvider, SaveButton, CREATE } from 'react-admin'; // A custom action creator which modifies the values before calling the default crudCreate action creator\n\nconst saveWithNote = (values, dataProvider) => {};\n\nclass SaveWithNoteButtonView extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const _this$props = this.props,\n            handleSubmit = _this$props.handleSubmit,\n            dataProvider = _this$props.dataProvider;\n      return handleSubmit(values => {\n        console.log(values); // dataProvider(\n        //   CREATE,\n        //   'Ajudantes/array',\n        //   {\n        //     pagination: { page: 1, perPage: 0 },\n        //     sort: { field: 'id', order: 'DESC' },\n        //     data: { data: values.usuarioId, eventoId: values.eventoId }\n        //   },\n        //   {\n        //     onSuccess: {\n        //       unselectAll: true,\n        //       refresh: true,\n        //       redirectTo: `/Eventos/${values.eventoId}/4`\n        //     },\n        //     onError: {\n        //       notification: {\n        //         body: 'Error: algo deu errado!',\n        //         level: 'warning'\n        //       }\n        //     }\n        //   }\n        // ).then(res => {\n        //   console.log(res);\n        // });\n      });\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          handleSubmitWithRedirect = _this$props2.handleSubmitWithRedirect,\n          saveWithNote = _this$props2.saveWithNote,\n          props = _objectWithoutProperties(_this$props2, [\"handleSubmitWithRedirect\", \"saveWithNote\"]);\n\n    return React.createElement(SaveButton, Object.assign({\n      handleSubmitWithRedirect: this.handleClick\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(undefined, {\n  saveWithNote\n})(withDataProvider(SaveWithNoteButtonView));","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Ajudante/CustomSaveButton.js"],"names":["React","Component","connect","withDataProvider","SaveButton","CREATE","saveWithNote","values","dataProvider","SaveWithNoteButtonView","handleClick","props","handleSubmit","console","log","render","handleSubmitWithRedirect","undefined"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,MAAvC,QAAqD,aAArD,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,YAAT,KAA0B,CAAE,CAAjD;;AACA,MAAMC,sBAAN,SAAqCR,SAArC,CAA+C;AAAA;AAAA;;AAAA,SAC7CS,WAD6C,GAC/B,MAAM;AAAA,0BACqB,KAAKC,KAD1B;AAAA,YACVC,YADU,eACVA,YADU;AAAA,YACIJ,YADJ,eACIA,YADJ;AAElB,aAAOI,YAAY,CAACL,MAAM,IAAI;AAC5BM,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ,EAD4B,CAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OA1BkB,CAAnB;AA2BD,KA9B4C;AAAA;;AAgC7CQ,EAAAA,MAAM,GAAG;AAAA,yBACsD,KAAKJ,KAD3D;AAAA,UACCK,wBADD,gBACCA,wBADD;AAAA,UAC2BV,YAD3B,gBAC2BA,YAD3B;AAAA,UAC4CK,KAD5C;;AAGP,WACE,oBAAC,UAAD;AAAY,MAAA,wBAAwB,EAAE,KAAKD;AAA3C,OAA4DC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAGD;;AAtC4C;;AAyC/C,eAAeT,OAAO,CACpBe,SADoB,EAEpB;AAAEX,EAAAA;AAAF,CAFoB,CAAP,CAGbH,gBAAgB,CAACM,sBAAD,CAHH,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withDataProvider, SaveButton, CREATE } from 'react-admin';\n\n// A custom action creator which modifies the values before calling the default crudCreate action creator\nconst saveWithNote = (values, dataProvider) => {};\nclass SaveWithNoteButtonView extends Component {\n  handleClick = () => {\n    const { handleSubmit, dataProvider } = this.props;\n    return handleSubmit(values => {\n      console.log(values);\n      // dataProvider(\n      //   CREATE,\n      //   'Ajudantes/array',\n      //   {\n      //     pagination: { page: 1, perPage: 0 },\n      //     sort: { field: 'id', order: 'DESC' },\n      //     data: { data: values.usuarioId, eventoId: values.eventoId }\n      //   },\n      //   {\n      //     onSuccess: {\n      //       unselectAll: true,\n      //       refresh: true,\n      //       redirectTo: `/Eventos/${values.eventoId}/4`\n      //     },\n      //     onError: {\n      //       notification: {\n      //         body: 'Error: algo deu errado!',\n      //         level: 'warning'\n      //       }\n      //     }\n      //   }\n      // ).then(res => {\n      //   console.log(res);\n      // });\n    });\n  };\n\n  render() {\n    const { handleSubmitWithRedirect, saveWithNote, ...props } = this.props;\n\n    return (\n      <SaveButton handleSubmitWithRedirect={this.handleClick} {...props} />\n    );\n  }\n}\n\nexport default connect(\n  undefined,\n  { saveWithNote }\n)(withDataProvider(SaveWithNoteButtonView));\n"]},"metadata":{},"sourceType":"module"}