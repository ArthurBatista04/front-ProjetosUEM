{"ast":null,"code":"import _objectWithoutProperties from \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Evento/editEvent.js\";\nimport React, { Fragment } from \"react\";\nimport { Edit, ShowButton, ExportButton, EditController, ReferenceField, List, CardActions, BooleanInput, TextInput, downloadCSV, TabbedForm, FormTab, BooleanField, NumberField, Link, SaveButton, Toolbar, required, LongTextInput, ReferenceManyField, GET_MANY_REFERENCE, Datagrid, EditButton, TextField } from \"react-admin\";\nimport AproveButton from \"./aproveButton\";\nimport Swal from \"sweetalert2\";\nimport Br from \"date-fns/locale/pt-BR\";\nimport { DateTimeInput } from \"react-admin-date-inputs\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport IconContentAdd from \"@material-ui/icons/Add\";\nimport DeleteButtonWithConfirmation from \"../deleteButtonWithConfirmation\";\nimport dataProvider from \"../dataProvider\";\nimport { unparse as convertToCSV } from \"papaparse/papaparse.min\";\nimport BackBotton from \"../backButton\";\nimport AddCategoria from \"./addDadoAdicional\";\nimport AddValor from \"./addValor\";\nimport Pagamento from \"../statusPagamentoButton\";\nimport RejectButton from \"./rejectButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Clipboard from \"react-clipboard.js\";\nDateFnsUtils.prototype.getStartOfMonth = DateFnsUtils.prototype.startOfMonth;\n\nconst exporter = async (records, fetchRelatedRecords) => {\n  var userInfo = await [];\n  let activityNames = [];\n  let count = 0;\n  const usuarios = await fetchRelatedRecords(records, \"usuarioId\", \"Usuarios\").then(async recordsUsuarios => {\n    return recordsUsuarios;\n  });\n  await records.map(async element => {\n    let info = {};\n    let atividadesECargaHorarias = await dataProvider(GET_MANY_REFERENCE, \"Inscricoes\", {\n      target: \"inscritoId\",\n      pagination: {\n        page: 1,\n        perPage: 0\n      },\n      sort: {\n        field: \"id\",\n        order: \"DESC\"\n      },\n      id: element.id\n    }).then(async response => {\n      let atividadesECargaHorarias = await fetchRelatedRecords(response.data, \"atividadeId\", \"Atividades\").then(async recordsAtividades => {\n        return await response.data.map(record => [[recordsAtividades[record.atividadeId].nome], //nome da atividade\n        record.cargaHoraria //carga horaria que o usuario teve na atividade\n        ]);\n      });\n      return await atividadesECargaHorarias;\n    });\n    info[\"nome\"] = await usuarios[element.usuarioId].nome; // nome do usuario\n\n    info[\"email\"] = await usuarios[element.usuarioId].email; // email do usuario\n\n    info[\"cpf\"] = await usuarios[element.usuarioId].cpf; // cpf do usuario\n\n    info[\"cargaHorariaTotal\"] = await element.cargaHoraria; // carga hoaria total do evento\n\n    userInfo.push(info);\n    atividadesECargaHorarias.forEach(activity => {\n      info[activity[0]] = activity[1]; // cria uma chave com o nome da atividade e a carga horaria recebida\n\n      if (!activityNames.includes(activity[0])) {\n        activityNames.push(activity[0]); // insere o nome da atividade\n      }\n    });\n    count = count + 1;\n\n    if (count === records.length) {\n      const csv = convertToCSV({\n        data: userInfo,\n        fields: [\"nome\", \"email\", \"cpf\", \"cargaHorariaTotal\"].concat(activityNames)\n      });\n      downloadCSV(csv, \"Usuarios\");\n    }\n  }); // console.log(userInfo);\n  //     const csv = convertToCSV({\n  //       data: userInfo,\n  //       fields: [\"nome\", \"email\", \"cpf\", \"cargaHoraria\"]\n  //     });\n  //     console.log(csv);\n  //     downloadCSV(csv, \"Usuarios\");\n  //nao da certo colocar aqui e pq eh async\n};\n\nconst PostActions = ({\n  currentSort,\n  eventId,\n  resource\n}) => React.createElement(CardActions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}, React.createElement(ExportButton, {\n  resource: resource,\n  sort: currentSort,\n  filter: {\n    eventoId: eventId\n  },\n  exporter: exporter,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n}));\n\nconst ValoresActions = props => React.createElement(CardActions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128\n  },\n  __self: this\n}, React.createElement(AddValor, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129\n  },\n  __self: this\n})));\n\nconst DadosActions = props => React.createElement(CardActions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}, React.createElement(AddCategoria, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134\n  },\n  __self: this\n})));\n\nconst Ajudantes = props => React.createElement(CardActions, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139\n  },\n  __self: this\n}), React.createElement(Button, Object.assign({\n  component: Link\n}, props, {\n  to: {\n    pathname: \"/Ajudantes/create\",\n    state: props.eventId\n  },\n  label: \"Adicionar ajudante\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140\n  },\n  __self: this\n}), React.createElement(IconContentAdd, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146\n  },\n  __self: this\n}), \" Ajudante\"));\n\nconst Toast = Swal.mixin({\n  toast: true,\n  position: \"top-end\",\n  showConfirmButton: false,\n  timer: 3000\n});\n\nconst AceitandoAjudantes = props => React.createElement(CardActions, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}), React.createElement(Clipboard, {\n  className: \"btn blue lighten-1\",\n  onSuccess: () => {\n    Toast.fire({\n      type: \"success\",\n      title: \"Copiado com sucesso\"\n    });\n  },\n  \"data-clipboard-text\": \"http://\".concat(window.location.host, \"/pet/solicitacaoAjudante/\").concat(props.eventId),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}, \"Link de compartilhamento\"));\n\nconst PostCreateToolbar = props => React.createElement(Toolbar, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174\n  },\n  __self: this\n}), React.createElement(SaveButton, {\n  redirect: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 175\n  },\n  __self: this\n}), React.createElement(BackBotton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 176\n  },\n  __self: this\n}));\n\nexport const PostCreate = (_ref) => {\n  let permissions = _ref.permissions,\n      props = _objectWithoutProperties(_ref, [\"permissions\"]);\n\n  return React.createElement(EditController, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), ({\n    resource,\n    record,\n    redirect,\n    save,\n    basePath,\n    version\n  }) => {\n    return React.createElement(TabbedForm, {\n      basePath: basePath,\n      redirect: redirect,\n      resource: resource,\n      record: record,\n      save: save,\n      version: version,\n      toolbar: React.createElement(PostCreateToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(FormTab, {\n      label: \"Dados eventos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      label: \"Nome do evento\",\n      validate: required(),\n      source: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(LongTextInput, {\n      validate: required(),\n      label: \"Descri\\xE7\\xE3o\",\n      source: \"descricao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(LongTextInput, {\n      label: \"Email enviado na inscri\\xE7\\xE3o\",\n      source: \"mensagemPagamento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      label: \"Link de pagamento\",\n      source: \"linkPagamento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(DateTimeInput, {\n      label: \"Data in\\xEDcio \",\n      source: \"dataInicio\",\n      providerOptions: {\n        utils: DateFnsUtils,\n        locale: Br\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(DateTimeInput, {\n      providerOptions: {\n        utils: DateFnsUtils,\n        locale: Br\n      },\n      label: \"Data t\\xE9rmino \",\n      source: \"dataFim\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(DateTimeInput, {\n      label: \"In\\xEDcio inscri\\xE7\\xF5es\",\n      source: \"inicioInscricoes\",\n      providerOptions: {\n        utils: DateFnsUtils,\n        locale: Br\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(DateTimeInput, {\n      label: \" T\\xE9rmino inscri\\xE7\\xF5es\",\n      source: \"fimInscricoes\",\n      providerOptions: {\n        utils: DateFnsUtils,\n        locale: Br\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(BooleanInput, {\n      label: \"Gratuito\",\n      source: \"gratuito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(BooleanInput, {\n      label: \"Possui dados adicionais?\",\n      source: \"hasDadoAdicional\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(BooleanInput, {\n      label: \"Recrutando ajudante\",\n      source: \"aceitandoAjudante\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    })), record && !record.gratuito && React.createElement(FormTab, {\n      label: \"Valores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Edit, Object.assign({\n      actions: null,\n      title: \"/\"\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(ReferenceManyField, Object.assign({}, props, {\n      basePath: basePath,\n      resource: resource,\n      record: record,\n      reference: \"Valores\",\n      target: \"eventoId\",\n      title: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(List, Object.assign({\n      actions: React.createElement(ValoresActions, Object.assign({\n        eventId: props.id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })),\n      title: \"Valores\",\n      bulkActionButtons: false,\n      filter: {\n        eventoId: props.id\n      }\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(Datagrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"nome\",\n      label: \"Categoria\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(NumberField, {\n      options: {\n        style: \"currency\",\n        currency: \"BRL\"\n      },\n      source: \"preco\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(EditButton, {\n      label: \"Gerenciar dados\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), permissions === \"admin\" && React.createElement(DeleteButtonWithConfirmation, {\n      redirect: false,\n      label: \"Remover valor\",\n      undoable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }))))))), React.createElement(FormTab, {\n      label: \"Participantes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Edit, Object.assign({\n      actions: null,\n      title: \"/\"\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(ReferenceManyField, Object.assign({}, props, {\n      basePath: basePath,\n      resource: resource,\n      record: record,\n      reference: \"Inscritos\",\n      target: \"eventoId\",\n      title: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(List, Object.assign({\n      actions: React.createElement(PostActions, Object.assign({\n        eventId: props.id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      })),\n      title: \"Participantes\",\n      bulkActionButtons: false,\n      filter: {\n        eventoId: props.id\n      }\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(Datagrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(ReferenceField, {\n      linkType: false,\n      label: \"Nome\",\n      reference: \"Usuarios\",\n      source: \"usuarioId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })), React.createElement(ReferenceField, {\n      linkType: false,\n      label: \"CPF\",\n      reference: \"Usuarios\",\n      source: \"usuarioId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"cpf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    })), React.createElement(ReferenceField, {\n      label: \"E-mail\",\n      linkType: false,\n      reference: \"Usuarios\",\n      source: \"usuarioId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    })), React.createElement(BooleanField, {\n      label: \"Pagamento\",\n      source: \"pago\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      label: \"Carga hor\\xE1ria total\",\n      source: \"cargaHoraria\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), (permissions === \"Petiano\" || permissions === \"admin\") && React.createElement(Pagamento, {\n      redirect: false,\n      label: \"Status pagamento\",\n      undoable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }), React.createElement(ShowButton, {\n      label: \"Visualizar atividades\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }), permissions === \"admin\" && React.createElement(DeleteButtonWithConfirmation, {\n      redirect: false,\n      label: \"Remover inscrito\",\n      undoable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }))))))), record && record.hasDadoAdicional && React.createElement(FormTab, {\n      label: \"Dados adicionais\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Edit, Object.assign({\n      actions: null,\n      title: \"/\"\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(ReferenceManyField, Object.assign({}, props, {\n      basePath: basePath,\n      resource: resource,\n      record: record,\n      reference: \"DadosAdicionais\",\n      target: \"eventosId\",\n      title: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), React.createElement(List, Object.assign({\n      actions: React.createElement(DadosActions, Object.assign({\n        eventId: props.id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      })),\n      title: \"Dados adicionais\",\n      bulkActionButtons: false,\n      filter: {\n        eventoId: props.id\n      }\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }), React.createElement(Datagrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), React.createElement(BooleanField, {\n      label: \"Possui op\\xE7\\xF5es?\",\n      source: \"respIsBoolean\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }), React.createElement(EditButton, {\n      label: \"Gerenicar Dados\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }), permissions === \"admin\" && React.createElement(DeleteButtonWithConfirmation, {\n      redirect: false,\n      label: \"Remover dado adicional\",\n      undoable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }))))))), React.createElement(FormTab, {\n      label: \"Ajudantes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(Edit, Object.assign({\n      actions: null,\n      title: \"/\"\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }), React.createElement(ReferenceManyField, Object.assign({}, props, {\n      basePath: basePath,\n      resource: resource,\n      record: record,\n      reference: \"Ajudantes\",\n      target: \"eventoId\",\n      title: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(List, Object.assign({\n      actions: React.createElement(Ajudantes, Object.assign({\n        eventId: props.id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      })),\n      title: \"Ajudantes\",\n      bulkActionButtons: false,\n      filter: {\n        eventoId: props.id\n      }\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }), React.createElement(Datagrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(ReferenceField, {\n      linkType: false,\n      label: \"Nome\",\n      reference: \"Usuarios\",\n      source: \"usuarioId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    })), React.createElement(ReferenceField, {\n      linkType: false,\n      label: \"CPF\",\n      reference: \"Usuarios\",\n      source: \"usuarioId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"cpf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    })), React.createElement(ReferenceField, {\n      label: \"E-mail\",\n      linkType: false,\n      reference: \"Usuarios\",\n      source: \"usuarioId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    })), permissions === \"admin\" && React.createElement(DeleteButtonWithConfirmation, {\n      redirect: false,\n      label: \"Remover ajudante\",\n      undoable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }))))))), record && record.aceitandoAjudante && React.createElement(FormTab, {\n      label: \"Solicita\\xE7\\xE3o p/ ajudante\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(Edit, Object.assign({\n      actions: null,\n      title: \"/\"\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), React.createElement(ReferenceManyField, Object.assign({}, props, {\n      basePath: basePath,\n      resource: resource,\n      record: record,\n      reference: \"Solicitacoes\",\n      target: \"eventoId\",\n      title: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }), React.createElement(List, Object.assign({\n      actions: React.createElement(AceitandoAjudantes, Object.assign({\n        eventId: props.id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      })),\n      title: \"Solicitacao\",\n      bulkActionButtons: false,\n      filter: {\n        eventoId: props.id\n      }\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }), React.createElement(Datagrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(ReferenceField, {\n      linkType: false,\n      label: \"Nome\",\n      reference: \"Usuarios\",\n      source: \"usuarioId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    })), React.createElement(ReferenceField, {\n      linkType: false,\n      label: \"CPF\",\n      reference: \"Usuarios\",\n      source: \"usuarioId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"cpf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    })), React.createElement(ReferenceField, {\n      label: \"E-mail\",\n      linkType: false,\n      reference: \"Usuarios\",\n      source: \"usuarioId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      source: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    })), React.createElement(AproveButton, Object.assign({\n      label: \"Aceitar\"\n    }, {\n      eventId: props.id\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    })), React.createElement(RejectButton, {\n      redirect: false,\n      label: \"Rejeitar\",\n      undoable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }))))))));\n  });\n};\nexport default PostCreate;","map":{"version":3,"sources":["/home/arthur/UEM/DesenvolvimentoPET/pet-ui/src/Components/Admin/Evento/editEvent.js"],"names":["React","Fragment","Edit","ShowButton","ExportButton","EditController","ReferenceField","List","CardActions","BooleanInput","TextInput","downloadCSV","TabbedForm","FormTab","BooleanField","NumberField","Link","SaveButton","Toolbar","required","LongTextInput","ReferenceManyField","GET_MANY_REFERENCE","Datagrid","EditButton","TextField","AproveButton","Swal","Br","DateTimeInput","DateFnsUtils","IconContentAdd","DeleteButtonWithConfirmation","dataProvider","unparse","convertToCSV","BackBotton","AddCategoria","AddValor","Pagamento","RejectButton","Button","Clipboard","prototype","getStartOfMonth","startOfMonth","exporter","records","fetchRelatedRecords","userInfo","activityNames","count","usuarios","then","recordsUsuarios","map","element","info","atividadesECargaHorarias","target","pagination","page","perPage","sort","field","order","id","response","data","recordsAtividades","record","atividadeId","nome","cargaHoraria","usuarioId","email","cpf","push","forEach","activity","includes","length","csv","fields","concat","PostActions","currentSort","eventId","resource","eventoId","ValoresActions","props","DadosActions","Ajudantes","pathname","state","Toast","mixin","toast","position","showConfirmButton","timer","AceitandoAjudantes","fire","type","title","window","location","host","PostCreateToolbar","PostCreate","permissions","redirect","save","basePath","version","utils","locale","gratuito","style","currency","hasDadoAdicional","aceitandoAjudante"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\n\nimport {\n  Edit,\n  ShowButton,\n  ExportButton,\n  EditController,\n  ReferenceField,\n  List,\n  CardActions,\n  BooleanInput,\n  TextInput,\n  downloadCSV,\n  TabbedForm,\n  FormTab,\n  BooleanField,\n  NumberField,\n  Link,\n  SaveButton,\n  Toolbar,\n  required,\n  LongTextInput,\n  ReferenceManyField,\n  GET_MANY_REFERENCE,\n  Datagrid,\n  EditButton,\n  TextField\n} from \"react-admin\";\nimport AproveButton from \"./aproveButton\";\nimport Swal from \"sweetalert2\";\nimport Br from \"date-fns/locale/pt-BR\";\nimport { DateTimeInput } from \"react-admin-date-inputs\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport IconContentAdd from \"@material-ui/icons/Add\";\nimport DeleteButtonWithConfirmation from \"../deleteButtonWithConfirmation\";\nimport dataProvider from \"../dataProvider\";\nimport { unparse as convertToCSV } from \"papaparse/papaparse.min\";\nimport BackBotton from \"../backButton\";\nimport AddCategoria from \"./addDadoAdicional\";\nimport AddValor from \"./addValor\";\nimport Pagamento from \"../statusPagamentoButton\";\nimport RejectButton from \"./rejectButton\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Clipboard from \"react-clipboard.js\";\nDateFnsUtils.prototype.getStartOfMonth = DateFnsUtils.prototype.startOfMonth;\nconst exporter = async (records, fetchRelatedRecords) => {\n  var userInfo = await [];\n  let activityNames = [];\n  let count = 0;\n  const usuarios = await fetchRelatedRecords(\n    records,\n    \"usuarioId\",\n    \"Usuarios\"\n  ).then(async recordsUsuarios => {\n    return recordsUsuarios;\n  });\n  await records.map(async element => {\n    let info = {};\n    let atividadesECargaHorarias = await dataProvider(\n      GET_MANY_REFERENCE,\n      \"Inscricoes\",\n      {\n        target: \"inscritoId\",\n        pagination: { page: 1, perPage: 0 },\n        sort: { field: \"id\", order: \"DESC\" },\n        id: element.id\n      }\n    ).then(async response => {\n      let atividadesECargaHorarias = await fetchRelatedRecords(\n        response.data,\n        \"atividadeId\",\n        \"Atividades\"\n      ).then(async recordsAtividades => {\n        return await response.data.map(record => [\n          [recordsAtividades[record.atividadeId].nome], //nome da atividade\n          record.cargaHoraria //carga horaria que o usuario teve na atividade\n        ]);\n      });\n      return await atividadesECargaHorarias;\n    });\n\n    info[\"nome\"] = await usuarios[element.usuarioId].nome; // nome do usuario\n    info[\"email\"] = await usuarios[element.usuarioId].email; // email do usuario\n    info[\"cpf\"] = await usuarios[element.usuarioId].cpf; // cpf do usuario\n    info[\"cargaHorariaTotal\"] = await element.cargaHoraria; // carga hoaria total do evento\n    userInfo.push(info);\n\n    atividadesECargaHorarias.forEach(activity => {\n      info[activity[0]] = activity[1]; // cria uma chave com o nome da atividade e a carga horaria recebida\n      if (!activityNames.includes(activity[0])) {\n        activityNames.push(activity[0]); // insere o nome da atividade\n      }\n    });\n    count = count + 1;\n    if (count === records.length) {\n      const csv = convertToCSV({\n        data: userInfo,\n        fields: [\"nome\", \"email\", \"cpf\", \"cargaHorariaTotal\"].concat(\n          activityNames\n        )\n      });\n\n      downloadCSV(csv, \"Usuarios\");\n    }\n  });\n  // console.log(userInfo);\n  //     const csv = convertToCSV({\n  //       data: userInfo,\n  //       fields: [\"nome\", \"email\", \"cpf\", \"cargaHoraria\"]\n  //     });\n  //     console.log(csv);\n  //     downloadCSV(csv, \"Usuarios\");\n  //nao da certo colocar aqui e pq eh async\n};\n\nconst PostActions = ({ currentSort, eventId, resource }) => (\n  <CardActions>\n    <ExportButton\n      resource={resource}\n      sort={currentSort}\n      filter={{ eventoId: eventId }}\n      exporter={exporter}\n    />\n  </CardActions>\n);\nconst ValoresActions = props => (\n  <CardActions>\n    <AddValor {...props} />\n  </CardActions>\n);\nconst DadosActions = props => (\n  <CardActions>\n    <AddCategoria {...props} />\n  </CardActions>\n);\n\nconst Ajudantes = props => (\n  <CardActions {...props}>\n    <Button\n      component={Link}\n      {...props}\n      to={{ pathname: \"/Ajudantes/create\", state: props.eventId }}\n      label=\"Adicionar ajudante\"\n    >\n      <IconContentAdd /> Ajudante\n    </Button>\n  </CardActions>\n);\nconst Toast = Swal.mixin({\n  toast: true,\n  position: \"top-end\",\n  showConfirmButton: false,\n  timer: 3000\n});\n\nconst AceitandoAjudantes = props => (\n  <CardActions {...props}>\n    <Clipboard\n      className=\"btn blue lighten-1\"\n      onSuccess={() => {\n        Toast.fire({\n          type: \"success\",\n          title: \"Copiado com sucesso\"\n        });\n      }}\n      data-clipboard-text={`http://${window.location.host}/pet/solicitacaoAjudante/${props.eventId}`}\n    >\n      Link de compartilhamento\n    </Clipboard>\n  </CardActions>\n);\nconst PostCreateToolbar = props => (\n  <Toolbar {...props}>\n    <SaveButton redirect={false} />\n    <BackBotton />\n  </Toolbar>\n);\n\nexport const PostCreate = ({ permissions, ...props }) => (\n  <EditController {...props}>\n    {({ resource, record, redirect, save, basePath, version }) => {\n      return (\n        <TabbedForm\n          basePath={basePath}\n          redirect={redirect}\n          resource={resource}\n          record={record}\n          save={save}\n          version={version}\n          toolbar={<PostCreateToolbar />}\n        >\n          <FormTab label=\"Dados eventos\">\n            <TextInput\n              label=\"Nome do evento\"\n              validate={required()}\n              source=\"nome\"\n            />\n            <LongTextInput\n              validate={required()}\n              label=\"Descrição\"\n              source=\"descricao\"\n            />\n            <LongTextInput\n              label=\"Email enviado na inscrição\"\n              source=\"mensagemPagamento\"\n            />\n            <TextInput\n              label=\"Link de pagamento\"\n              source=\"linkPagamento\"\n            ></TextInput>\n            <DateTimeInput\n              label=\"Data início \"\n              source=\"dataInicio\"\n              providerOptions={{ utils: DateFnsUtils, locale: Br }}\n            />\n            <DateTimeInput\n              providerOptions={{ utils: DateFnsUtils, locale: Br }}\n              label=\"Data término \"\n              source=\"dataFim\"\n            />\n            <DateTimeInput\n              label=\"Início inscrições\"\n              source=\"inicioInscricoes\"\n              providerOptions={{ utils: DateFnsUtils, locale: Br }}\n            />\n            <DateTimeInput\n              label=\" Término inscrições\"\n              source=\"fimInscricoes\"\n              providerOptions={{ utils: DateFnsUtils, locale: Br }}\n            />\n\n            <BooleanInput label=\"Gratuito\" source=\"gratuito\"></BooleanInput>\n            <BooleanInput\n              label=\"Possui dados adicionais?\"\n              source=\"hasDadoAdicional\"\n            ></BooleanInput>\n            <BooleanInput\n              label=\"Recrutando ajudante\"\n              source=\"aceitandoAjudante\"\n            ></BooleanInput>\n          </FormTab>\n          {record && !record.gratuito && (\n            <FormTab label=\"Valores\">\n              <Fragment>\n                <Edit actions={null} title=\"/\" {...props}>\n                  <ReferenceManyField\n                    {...props}\n                    basePath={basePath}\n                    resource={resource}\n                    record={record}\n                    reference=\"Valores\"\n                    target=\"eventoId\"\n                    title={false}\n                  >\n                    <List\n                      actions={<ValoresActions {...{ eventId: props.id }} />}\n                      title=\"Valores\"\n                      bulkActionButtons={false}\n                      filter={{ eventoId: props.id }}\n                      {...props}\n                    >\n                      <Datagrid>\n                        <TextField source=\"nome\" label=\"Categoria\"></TextField>\n                        <NumberField\n                          options={{ style: \"currency\", currency: \"BRL\" }}\n                          source=\"preco\"\n                        />\n                        <EditButton label=\"Gerenciar dados\"></EditButton>\n                        {permissions === \"admin\" && (\n                          <DeleteButtonWithConfirmation\n                            redirect={false}\n                            label=\"Remover valor\"\n                            undoable={true}\n                          />\n                        )}\n                      </Datagrid>\n                    </List>\n                  </ReferenceManyField>\n                </Edit>\n              </Fragment>\n            </FormTab>\n          )}\n\n          <FormTab label=\"Participantes\">\n            <Fragment>\n              <Edit actions={null} title=\"/\" {...props}>\n                <ReferenceManyField\n                  {...props}\n                  basePath={basePath}\n                  resource={resource}\n                  record={record}\n                  reference=\"Inscritos\"\n                  target=\"eventoId\"\n                  title={false}\n                >\n                  <List\n                    actions={<PostActions {...{ eventId: props.id }} />}\n                    title=\"Participantes\"\n                    bulkActionButtons={false}\n                    filter={{ eventoId: props.id }}\n                    {...props}\n                  >\n                    <Datagrid>\n                      <ReferenceField\n                        linkType={false}\n                        label=\"Nome\"\n                        reference=\"Usuarios\"\n                        source=\"usuarioId\"\n                      >\n                        <TextField source=\"nome\" />\n                      </ReferenceField>\n                      <ReferenceField\n                        linkType={false}\n                        label=\"CPF\"\n                        reference=\"Usuarios\"\n                        source=\"usuarioId\"\n                      >\n                        <TextField source=\"cpf\" />\n                      </ReferenceField>\n                      <ReferenceField\n                        label=\"E-mail\"\n                        linkType={false}\n                        reference=\"Usuarios\"\n                        source=\"usuarioId\"\n                      >\n                        <TextField source=\"email\" />\n                      </ReferenceField>\n                      <BooleanField label=\"Pagamento\" source=\"pago\" />\n                      <TextField\n                        label=\"Carga horária total\"\n                        source=\"cargaHoraria\"\n                      />\n                      {(permissions === \"Petiano\" ||\n                        permissions === \"admin\") && (\n                        <Pagamento\n                          redirect={false}\n                          label=\"Status pagamento\"\n                          undoable={true}\n                        />\n                      )}\n                      <ShowButton label=\"Visualizar atividades\" />\n                      {permissions === \"admin\" && (\n                        <DeleteButtonWithConfirmation\n                          redirect={false}\n                          label=\"Remover inscrito\"\n                          undoable={true}\n                        />\n                      )}\n                    </Datagrid>\n                  </List>\n                </ReferenceManyField>\n              </Edit>\n            </Fragment>\n          </FormTab>\n          {record && record.hasDadoAdicional && (\n            <FormTab label=\"Dados adicionais\">\n              <Fragment>\n                <Edit actions={null} title=\"/\" {...props}>\n                  <ReferenceManyField\n                    {...props}\n                    basePath={basePath}\n                    resource={resource}\n                    record={record}\n                    reference=\"DadosAdicionais\"\n                    target=\"eventosId\"\n                    title={false}\n                  >\n                    <List\n                      actions={<DadosActions {...{ eventId: props.id }} />}\n                      title=\"Dados adicionais\"\n                      bulkActionButtons={false}\n                      filter={{ eventoId: props.id }}\n                      {...props}\n                    >\n                      <Datagrid>\n                        <TextField source=\"nome\" />\n                        <BooleanField\n                          label=\"Possui opções?\"\n                          source=\"respIsBoolean\"\n                        />\n                        <EditButton label=\"Gerenicar Dados\" />\n                        {permissions === \"admin\" && (\n                          <DeleteButtonWithConfirmation\n                            redirect={false}\n                            label=\"Remover dado adicional\"\n                            undoable={true}\n                          />\n                        )}\n                      </Datagrid>\n                    </List>\n                  </ReferenceManyField>\n                </Edit>\n              </Fragment>\n            </FormTab>\n          )}\n          <FormTab label=\"Ajudantes\">\n            <Fragment>\n              <Edit actions={null} title=\"/\" {...props}>\n                <ReferenceManyField\n                  {...props}\n                  basePath={basePath}\n                  resource={resource}\n                  record={record}\n                  reference=\"Ajudantes\"\n                  target=\"eventoId\"\n                  title={false}\n                >\n                  <List\n                    actions={<Ajudantes {...{ eventId: props.id }}></Ajudantes>}\n                    title=\"Ajudantes\"\n                    bulkActionButtons={false}\n                    filter={{ eventoId: props.id }}\n                    {...props}\n                  >\n                    <Datagrid>\n                      <ReferenceField\n                        linkType={false}\n                        label=\"Nome\"\n                        reference=\"Usuarios\"\n                        source=\"usuarioId\"\n                      >\n                        <TextField source=\"nome\" />\n                      </ReferenceField>\n                      <ReferenceField\n                        linkType={false}\n                        label=\"CPF\"\n                        reference=\"Usuarios\"\n                        source=\"usuarioId\"\n                      >\n                        <TextField source=\"cpf\" />\n                      </ReferenceField>\n                      <ReferenceField\n                        label=\"E-mail\"\n                        linkType={false}\n                        reference=\"Usuarios\"\n                        source=\"usuarioId\"\n                      >\n                        <TextField source=\"email\" />\n                      </ReferenceField>\n                      {permissions === \"admin\" && (\n                        <DeleteButtonWithConfirmation\n                          redirect={false}\n                          label=\"Remover ajudante\"\n                          undoable={true}\n                        />\n                      )}\n                    </Datagrid>\n                  </List>\n                </ReferenceManyField>\n              </Edit>\n            </Fragment>\n          </FormTab>\n          {record && record.aceitandoAjudante && (\n            <FormTab label=\"Solicitação p/ ajudante\">\n              <Fragment>\n                <Edit actions={null} title=\"/\" {...props}>\n                  <ReferenceManyField\n                    {...props}\n                    basePath={basePath}\n                    resource={resource}\n                    record={record}\n                    reference=\"Solicitacoes\"\n                    target=\"eventoId\"\n                    title={false}\n                  >\n                    <List\n                      actions={\n                        <AceitandoAjudantes\n                          {...{ eventId: props.id }}\n                        ></AceitandoAjudantes>\n                      }\n                      title=\"Solicitacao\"\n                      bulkActionButtons={false}\n                      filter={{ eventoId: props.id }}\n                      {...props}\n                    >\n                      <Datagrid>\n                        <ReferenceField\n                          linkType={false}\n                          label=\"Nome\"\n                          reference=\"Usuarios\"\n                          source=\"usuarioId\"\n                        >\n                          <TextField source=\"nome\" />\n                        </ReferenceField>\n                        <ReferenceField\n                          linkType={false}\n                          label=\"CPF\"\n                          reference=\"Usuarios\"\n                          source=\"usuarioId\"\n                        >\n                          <TextField source=\"cpf\" />\n                        </ReferenceField>\n                        <ReferenceField\n                          label=\"E-mail\"\n                          linkType={false}\n                          reference=\"Usuarios\"\n                          source=\"usuarioId\"\n                        >\n                          <TextField source=\"email\" />\n                        </ReferenceField>\n                        <AproveButton\n                          label=\"Aceitar\"\n                          {...{ eventId: props.id }}\n                        ></AproveButton>\n                        <RejectButton\n                          redirect={false}\n                          label=\"Rejeitar\"\n                          undoable={true}\n                        />\n                      </Datagrid>\n                    </List>\n                  </ReferenceManyField>\n                </Edit>\n              </Fragment>\n            </FormTab>\n          )}\n        </TabbedForm>\n      );\n    }}\n  </EditController>\n);\n\nexport default PostCreate;\n"]},"metadata":{},"sourceType":"module"}